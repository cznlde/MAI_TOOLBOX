'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.18408
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Artikel"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Artikel
    Inherits Global.System.Data.DataSet
    
    Private tableART As ARTDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ART")) Is Nothing) Then
                MyBase.Tables.Add(New ARTDataTable(ds.Tables("ART")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ART() As ARTDataTable
        Get
            Return Me.tableART
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Artikel = CType(MyBase.Clone,Artikel)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ART")) Is Nothing) Then
                MyBase.Tables.Add(New ARTDataTable(ds.Tables("ART")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableART = CType(MyBase.Tables("ART"),ARTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableART) Is Nothing) Then
                Me.tableART.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "Artikel"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableART = New ARTDataTable()
        MyBase.Tables.Add(Me.tableART)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeART() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Artikel = New Artikel()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ARTRowChangeEventHandler(ByVal sender As Object, ByVal e As ARTRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ARTDataTable
        Inherits Global.System.Data.TypedTableBase(Of ARTRow)
        
        Private columnART_ID As Global.System.Data.DataColumn
        
        Private columnArtikelnummer As Global.System.Data.DataColumn
        
        Private columnEANNummer As Global.System.Data.DataColumn
        
        Private columnBezeichnung As Global.System.Data.DataColumn
        
        Private columnZusatz As Global.System.Data.DataColumn
        
        Private columnMatchcode As Global.System.Data.DataColumn
        
        Private columnArtikelgruppe As Global.System.Data.DataColumn
        
        Private columnErfolgskontengruppe As Global.System.Data.DataColumn
        
        Private columnAufwandskontengruppe As Global.System.Data.DataColumn
        
        Private columnMengenstaffel As Global.System.Data.DataColumn
        
        Private columnSSEinkauf As Global.System.Data.DataColumn
        
        Private columnKontoEinkauf As Global.System.Data.DataColumn
        
        Private columnSSVerkauf As Global.System.Data.DataColumn
        
        Private columnKontoVerkauf As Global.System.Data.DataColumn
        
        Private columnMengeneinheit As Global.System.Data.DataColumn
        
        Private columnPreisverweis As Global.System.Data.DataColumn
        
        Private columnPreiseinheit As Global.System.Data.DataColumn
        
        Private columnGewicht As Global.System.Data.DataColumn
        
        Private columnLagerartikel As Global.System.Data.DataColumn
        
        Private columnMengenformel As Global.System.Data.DataColumn
        
        Private columnStueckliste As Global.System.Data.DataColumn
        
        Private columnSerieCharge As Global.System.Data.DataColumn
        
        Private columnVariantenartikel As Global.System.Data.DataColumn
        
        Private columnMinusWarnung As Global.System.Data.DataColumn
        
        Private columnProvisionsfaehig As Global.System.Data.DataColumn
        
        Private columnRabattfaehig As Global.System.Data.DataColumn
        
        Private columnSkontofaehig As Global.System.Data.DataColumn
        
        Private columnProvisionsgruppe As Global.System.Data.DataColumn
        
        Private columnHersteller As Global.System.Data.DataColumn
        
        Private columnHstArtikelnummer As Global.System.Data.DataColumn
        
        Private columnLieferant As Global.System.Data.DataColumn
        
        Private columnDispositionsart As Global.System.Data.DataColumn
        
        Private columnAutoBestellung As Global.System.Data.DataColumn
        
        Private columnLagerstrategie As Global.System.Data.DataColumn
        
        Private columnAuslaufdatum As Global.System.Data.DataColumn
        
        Private columnInaktiv As Global.System.Data.DataColumn
        
        Private columnAngelegtAm As Global.System.Data.DataColumn
        
        Private columnAngelegtVon As Global.System.Data.DataColumn
        
        Private columnGeaendertAm As Global.System.Data.DataColumn
        
        Private columnGeaendertVon As Global.System.Data.DataColumn
        
        Private columnFreierText1 As Global.System.Data.DataColumn
        
        Private columnFreierText2 As Global.System.Data.DataColumn
        
        Private columnFreieZahl1 As Global.System.Data.DataColumn
        
        Private columnFreieZahl2 As Global.System.Data.DataColumn
        
        Private columnFreieZahl3 As Global.System.Data.DataColumn
        
        Private columnFreieZahl4 As Global.System.Data.DataColumn
        
        Private columnFreiesDatum1 As Global.System.Data.DataColumn
        
        Private columnFreiesDatum2 As Global.System.Data.DataColumn
        
        Private columnFreiesKennzeichen1 As Global.System.Data.DataColumn
        
        Private columnFreiesKennzeichen2 As Global.System.Data.DataColumn
        
        Private columnFreiesKennzeichen3 As Global.System.Data.DataColumn
        
        Private columnFreiesKennzeichen4 As Global.System.Data.DataColumn
        
        Private columnSSEG As Global.System.Data.DataColumn
        
        Private columnSSImport As Global.System.Data.DataColumn
        
        Private columnSSExport As Global.System.Data.DataColumn
        
        Private columnShopAktiv As Global.System.Data.DataColumn
        
        Private columnRegion As Global.System.Data.DataColumn
        
        Private columnUrsprungsland As Global.System.Data.DataColumn
        
        Private columnGeschaeftsart As Global.System.Data.DataColumn
        
        Private columnWarencode As Global.System.Data.DataColumn
        
        Private columnStatVersand As Global.System.Data.DataColumn
        
        Private columnStatEingang As Global.System.Data.DataColumn
        
        Private columnStatWertEuro As Global.System.Data.DataColumn
        
        Private columnKostenstelle As Global.System.Data.DataColumn
        
        Private columnKostentraeger As Global.System.Data.DataColumn
        
        Private columnDNExport As Global.System.Data.DataColumn
        
        Private columnAusschussartikelnummer As Global.System.Data.DataColumn
        
        Private columnProduktionslager As Global.System.Data.DataColumn
        
        Private columnAusschussBewertung As Global.System.Data.DataColumn
        
        Private columnVerfallsfrist As Global.System.Data.DataColumn
        
        Private columnTS As Global.System.Data.DataColumn
        
        Private column_HERSTELLERNAME As Global.System.Data.DataColumn
        
        Private column_LIEFERANTNAME As Global.System.Data.DataColumn
        
        Private column_EV As Global.System.Data.DataColumn
        
        Private column_EXBESTNR As Global.System.Data.DataColumn
        
        Private columnPreismengeneinheit As Global.System.Data.DataColumn
        
        Private columnPreismengenfaktor As Global.System.Data.DataColumn
        
        Private columnLosgroesseVerkauf As Global.System.Data.DataColumn
        
        Private columnBestandsauswahl As Global.System.Data.DataColumn
        
        Private column_VERFUEGBAR As Global.System.Data.DataColumn
        
        Private column_ARTIKELNUMMERALT As Global.System.Data.DataColumn
        
        Private column_LAGERNEU As Global.System.Data.DataColumn
        
        Private column_LAGERPLATZNEU As Global.System.Data.DataColumn
        
        Private columnLeistungsartikel As Global.System.Data.DataColumn
        
        Private columnAufschlagstyp As Global.System.Data.DataColumn
        
        Private columnArbeitsplanID As Global.System.Data.DataColumn
        
        Private columnAuftragsTypID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ART"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ART_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnART_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ArtikelnummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtikelnummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EANNummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEANNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BezeichnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBezeichnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZusatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZusatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MatchcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMatchcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ArtikelgruppeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtikelgruppe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErfolgskontengruppeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErfolgskontengruppe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AufwandskontengruppeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAufwandskontengruppe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengenstaffelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMengenstaffel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SSEinkaufColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSEinkauf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KontoEinkaufColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKontoEinkauf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SSVerkaufColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSVerkauf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KontoVerkaufColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKontoVerkauf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengeneinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMengeneinheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreisverweisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreisverweis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreiseinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreiseinheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GewichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGewicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LagerartikelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLagerartikel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MengenformelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMengenformel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StuecklisteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStueckliste
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SerieChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSerieCharge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VariantenartikelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVariantenartikel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MinusWarnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinusWarnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProvisionsfaehigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvisionsfaehig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RabattfaehigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRabattfaehig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SkontofaehigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontofaehig
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProvisionsgruppeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvisionsgruppe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HerstellerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHersteller
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HstArtikelnummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHstArtikelnummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LieferantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLieferant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DispositionsartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDispositionsart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AutoBestellungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutoBestellung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LagerstrategieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLagerstrategie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AuslaufdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuslaufdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InaktivColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInaktiv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AngelegtAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAngelegtAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AngelegtVonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAngelegtVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GeaendertAmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeaendertAm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GeaendertVonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeaendertVon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreierText1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreierText1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreierText2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreierText2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreieZahl1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreieZahl1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreieZahl2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreieZahl2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreieZahl3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreieZahl3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreieZahl4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreieZahl4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreiesDatum1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreiesDatum1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreiesDatum2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreiesDatum2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreiesKennzeichen1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreiesKennzeichen1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreiesKennzeichen2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreiesKennzeichen2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreiesKennzeichen3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreiesKennzeichen3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FreiesKennzeichen4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreiesKennzeichen4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SSEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SSImportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSImport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SSExportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSSExport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ShopAktivColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShopAktiv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UrsprungslandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUrsprungsland
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GeschaeftsartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeschaeftsart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WarencodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWarencode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatVersandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatVersand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatEingangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatEingang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatWertEuroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatWertEuro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KostenstelleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKostenstelle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KostentraegerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKostentraeger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DNExportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDNExport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AusschussartikelnummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAusschussartikelnummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProduktionslagerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduktionslager
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AusschussBewertungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAusschussBewertung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VerfallsfristColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerfallsfrist
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _HERSTELLERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_HERSTELLERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _LIEFERANTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_LIEFERANTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _EVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_EV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _EXBESTNRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_EXBESTNR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreismengeneinheitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreismengeneinheit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreismengenfaktorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreismengenfaktor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LosgroesseVerkaufColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLosgroesseVerkauf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BestandsauswahlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBestandsauswahl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _VERFUEGBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_VERFUEGBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _ARTIKELNUMMERALTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_ARTIKELNUMMERALT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _LAGERNEUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_LAGERNEU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _LAGERPLATZNEUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_LAGERPLATZNEU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LeistungsartikelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeistungsartikel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AufschlagstypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAufschlagstyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ArbeitsplanIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArbeitsplanID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AuftragsTypIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuftragsTypID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ARTRow
            Get
                Return CType(Me.Rows(index),ARTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTRowChanging As ARTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTRowChanged As ARTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTRowDeleting As ARTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTRowDeleted As ARTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddARTRow(ByVal row As ARTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddARTRow( _
                    ByVal Artikelnummer As String,  _
                    ByVal EANNummer As String,  _
                    ByVal Bezeichnung As String,  _
                    ByVal Zusatz As String,  _
                    ByVal Matchcode As String,  _
                    ByVal Artikelgruppe As String,  _
                    ByVal Erfolgskontengruppe As String,  _
                    ByVal Aufwandskontengruppe As String,  _
                    ByVal Mengenstaffel As String,  _
                    ByVal SSEinkauf As String,  _
                    ByVal KontoEinkauf As String,  _
                    ByVal SSVerkauf As String,  _
                    ByVal KontoVerkauf As String,  _
                    ByVal Mengeneinheit As String,  _
                    ByVal Preisverweis As String,  _
                    ByVal Preiseinheit As Double,  _
                    ByVal Gewicht As Double,  _
                    ByVal Lagerartikel As Boolean,  _
                    ByVal Mengenformel As String,  _
                    ByVal Stueckliste As String,  _
                    ByVal SerieCharge As String,  _
                    ByVal Variantenartikel As String,  _
                    ByVal MinusWarnung As Boolean,  _
                    ByVal Provisionsfaehig As Boolean,  _
                    ByVal Rabattfaehig As Boolean,  _
                    ByVal Skontofaehig As Boolean,  _
                    ByVal Provisionsgruppe As String,  _
                    ByVal Hersteller As String,  _
                    ByVal HstArtikelnummer As String,  _
                    ByVal Lieferant As String,  _
                    ByVal Dispositionsart As String,  _
                    ByVal AutoBestellung As String,  _
                    ByVal Lagerstrategie As String,  _
                    ByVal Auslaufdatum As Date,  _
                    ByVal Inaktiv As Boolean,  _
                    ByVal AngelegtAm As Date,  _
                    ByVal AngelegtVon As String,  _
                    ByVal GeaendertAm As Date,  _
                    ByVal GeaendertVon As String,  _
                    ByVal FreierText1 As String,  _
                    ByVal FreierText2 As String,  _
                    ByVal FreieZahl1 As Short,  _
                    ByVal FreieZahl2 As Short,  _
                    ByVal FreieZahl3 As Double,  _
                    ByVal FreieZahl4 As Double,  _
                    ByVal FreiesDatum1 As Date,  _
                    ByVal FreiesDatum2 As Date,  _
                    ByVal FreiesKennzeichen1 As Boolean,  _
                    ByVal FreiesKennzeichen2 As Boolean,  _
                    ByVal FreiesKennzeichen3 As Boolean,  _
                    ByVal FreiesKennzeichen4 As Boolean,  _
                    ByVal SSEG As String,  _
                    ByVal SSImport As String,  _
                    ByVal SSExport As String,  _
                    ByVal ShopAktiv As Boolean,  _
                    ByVal _Region As String,  _
                    ByVal Ursprungsland As String,  _
                    ByVal Geschaeftsart As String,  _
                    ByVal Warencode As String,  _
                    ByVal StatVersand As String,  _
                    ByVal StatEingang As String,  _
                    ByVal StatWertEuro As Double,  _
                    ByVal Kostenstelle As String,  _
                    ByVal Kostentraeger As String,  _
                    ByVal DNExport As String,  _
                    ByVal Ausschussartikelnummer As String,  _
                    ByVal Produktionslager As String,  _
                    ByVal AusschussBewertung As Double,  _
                    ByVal Verfallsfrist As Integer,  _
                    ByVal TS() As Byte,  _
                    ByVal _HERSTELLERNAME As String,  _
                    ByVal _LIEFERANTNAME As String,  _
                    ByVal _EV As String,  _
                    ByVal _EXBESTNR As String,  _
                    ByVal Preismengeneinheit As String,  _
                    ByVal Preismengenfaktor As Double,  _
                    ByVal LosgroesseVerkauf As Integer,  _
                    ByVal Bestandsauswahl As Boolean,  _
                    ByVal _VERFUEGBAR As String,  _
                    ByVal _ARTIKELNUMMERALT As String,  _
                    ByVal _LAGERNEU As String,  _
                    ByVal _LAGERPLATZNEU As String,  _
                    ByVal Leistungsartikel As Boolean,  _
                    ByVal Aufschlagstyp As String,  _
                    ByVal ArbeitsplanID As String,  _
                    ByVal AuftragsTypID As String) As ARTRow
            Dim rowARTRow As ARTRow = CType(Me.NewRow,ARTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Artikelnummer, EANNummer, Bezeichnung, Zusatz, Matchcode, Artikelgruppe, Erfolgskontengruppe, Aufwandskontengruppe, Mengenstaffel, SSEinkauf, KontoEinkauf, SSVerkauf, KontoVerkauf, Mengeneinheit, Preisverweis, Preiseinheit, Gewicht, Lagerartikel, Mengenformel, Stueckliste, SerieCharge, Variantenartikel, MinusWarnung, Provisionsfaehig, Rabattfaehig, Skontofaehig, Provisionsgruppe, Hersteller, HstArtikelnummer, Lieferant, Dispositionsart, AutoBestellung, Lagerstrategie, Auslaufdatum, Inaktiv, AngelegtAm, AngelegtVon, GeaendertAm, GeaendertVon, FreierText1, FreierText2, FreieZahl1, FreieZahl2, FreieZahl3, FreieZahl4, FreiesDatum1, FreiesDatum2, FreiesKennzeichen1, FreiesKennzeichen2, FreiesKennzeichen3, FreiesKennzeichen4, SSEG, SSImport, SSExport, ShopAktiv, _Region, Ursprungsland, Geschaeftsart, Warencode, StatVersand, StatEingang, StatWertEuro, Kostenstelle, Kostentraeger, DNExport, Ausschussartikelnummer, Produktionslager, AusschussBewertung, Verfallsfrist, TS, _HERSTELLERNAME, _LIEFERANTNAME, _EV, _EXBESTNR, Preismengeneinheit, Preismengenfaktor, LosgroesseVerkauf, Bestandsauswahl, _VERFUEGBAR, _ARTIKELNUMMERALT, _LAGERNEU, _LAGERPLATZNEU, Leistungsartikel, Aufschlagstyp, ArbeitsplanID, AuftragsTypID}
            rowARTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowARTRow)
            Return rowARTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByART_ID(ByVal ART_ID As Integer) As ARTRow
            Return CType(Me.Rows.Find(New Object() {ART_ID}),ARTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ARTDataTable = CType(MyBase.Clone,ARTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ARTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnART_ID = MyBase.Columns("ART_ID")
            Me.columnArtikelnummer = MyBase.Columns("Artikelnummer")
            Me.columnEANNummer = MyBase.Columns("EANNummer")
            Me.columnBezeichnung = MyBase.Columns("Bezeichnung")
            Me.columnZusatz = MyBase.Columns("Zusatz")
            Me.columnMatchcode = MyBase.Columns("Matchcode")
            Me.columnArtikelgruppe = MyBase.Columns("Artikelgruppe")
            Me.columnErfolgskontengruppe = MyBase.Columns("Erfolgskontengruppe")
            Me.columnAufwandskontengruppe = MyBase.Columns("Aufwandskontengruppe")
            Me.columnMengenstaffel = MyBase.Columns("Mengenstaffel")
            Me.columnSSEinkauf = MyBase.Columns("SSEinkauf")
            Me.columnKontoEinkauf = MyBase.Columns("KontoEinkauf")
            Me.columnSSVerkauf = MyBase.Columns("SSVerkauf")
            Me.columnKontoVerkauf = MyBase.Columns("KontoVerkauf")
            Me.columnMengeneinheit = MyBase.Columns("Mengeneinheit")
            Me.columnPreisverweis = MyBase.Columns("Preisverweis")
            Me.columnPreiseinheit = MyBase.Columns("Preiseinheit")
            Me.columnGewicht = MyBase.Columns("Gewicht")
            Me.columnLagerartikel = MyBase.Columns("Lagerartikel")
            Me.columnMengenformel = MyBase.Columns("Mengenformel")
            Me.columnStueckliste = MyBase.Columns("Stueckliste")
            Me.columnSerieCharge = MyBase.Columns("SerieCharge")
            Me.columnVariantenartikel = MyBase.Columns("Variantenartikel")
            Me.columnMinusWarnung = MyBase.Columns("MinusWarnung")
            Me.columnProvisionsfaehig = MyBase.Columns("Provisionsfaehig")
            Me.columnRabattfaehig = MyBase.Columns("Rabattfaehig")
            Me.columnSkontofaehig = MyBase.Columns("Skontofaehig")
            Me.columnProvisionsgruppe = MyBase.Columns("Provisionsgruppe")
            Me.columnHersteller = MyBase.Columns("Hersteller")
            Me.columnHstArtikelnummer = MyBase.Columns("HstArtikelnummer")
            Me.columnLieferant = MyBase.Columns("Lieferant")
            Me.columnDispositionsart = MyBase.Columns("Dispositionsart")
            Me.columnAutoBestellung = MyBase.Columns("AutoBestellung")
            Me.columnLagerstrategie = MyBase.Columns("Lagerstrategie")
            Me.columnAuslaufdatum = MyBase.Columns("Auslaufdatum")
            Me.columnInaktiv = MyBase.Columns("Inaktiv")
            Me.columnAngelegtAm = MyBase.Columns("AngelegtAm")
            Me.columnAngelegtVon = MyBase.Columns("AngelegtVon")
            Me.columnGeaendertAm = MyBase.Columns("GeaendertAm")
            Me.columnGeaendertVon = MyBase.Columns("GeaendertVon")
            Me.columnFreierText1 = MyBase.Columns("FreierText1")
            Me.columnFreierText2 = MyBase.Columns("FreierText2")
            Me.columnFreieZahl1 = MyBase.Columns("FreieZahl1")
            Me.columnFreieZahl2 = MyBase.Columns("FreieZahl2")
            Me.columnFreieZahl3 = MyBase.Columns("FreieZahl3")
            Me.columnFreieZahl4 = MyBase.Columns("FreieZahl4")
            Me.columnFreiesDatum1 = MyBase.Columns("FreiesDatum1")
            Me.columnFreiesDatum2 = MyBase.Columns("FreiesDatum2")
            Me.columnFreiesKennzeichen1 = MyBase.Columns("FreiesKennzeichen1")
            Me.columnFreiesKennzeichen2 = MyBase.Columns("FreiesKennzeichen2")
            Me.columnFreiesKennzeichen3 = MyBase.Columns("FreiesKennzeichen3")
            Me.columnFreiesKennzeichen4 = MyBase.Columns("FreiesKennzeichen4")
            Me.columnSSEG = MyBase.Columns("SSEG")
            Me.columnSSImport = MyBase.Columns("SSImport")
            Me.columnSSExport = MyBase.Columns("SSExport")
            Me.columnShopAktiv = MyBase.Columns("ShopAktiv")
            Me.columnRegion = MyBase.Columns("Region")
            Me.columnUrsprungsland = MyBase.Columns("Ursprungsland")
            Me.columnGeschaeftsart = MyBase.Columns("Geschaeftsart")
            Me.columnWarencode = MyBase.Columns("Warencode")
            Me.columnStatVersand = MyBase.Columns("StatVersand")
            Me.columnStatEingang = MyBase.Columns("StatEingang")
            Me.columnStatWertEuro = MyBase.Columns("StatWertEuro")
            Me.columnKostenstelle = MyBase.Columns("Kostenstelle")
            Me.columnKostentraeger = MyBase.Columns("Kostentraeger")
            Me.columnDNExport = MyBase.Columns("DNExport")
            Me.columnAusschussartikelnummer = MyBase.Columns("Ausschussartikelnummer")
            Me.columnProduktionslager = MyBase.Columns("Produktionslager")
            Me.columnAusschussBewertung = MyBase.Columns("AusschussBewertung")
            Me.columnVerfallsfrist = MyBase.Columns("Verfallsfrist")
            Me.columnTS = MyBase.Columns("TS")
            Me.column_HERSTELLERNAME = MyBase.Columns("_HERSTELLERNAME")
            Me.column_LIEFERANTNAME = MyBase.Columns("_LIEFERANTNAME")
            Me.column_EV = MyBase.Columns("_EV")
            Me.column_EXBESTNR = MyBase.Columns("_EXBESTNR")
            Me.columnPreismengeneinheit = MyBase.Columns("Preismengeneinheit")
            Me.columnPreismengenfaktor = MyBase.Columns("Preismengenfaktor")
            Me.columnLosgroesseVerkauf = MyBase.Columns("LosgroesseVerkauf")
            Me.columnBestandsauswahl = MyBase.Columns("Bestandsauswahl")
            Me.column_VERFUEGBAR = MyBase.Columns("_VERFUEGBAR")
            Me.column_ARTIKELNUMMERALT = MyBase.Columns("_ARTIKELNUMMERALT")
            Me.column_LAGERNEU = MyBase.Columns("_LAGERNEU")
            Me.column_LAGERPLATZNEU = MyBase.Columns("_LAGERPLATZNEU")
            Me.columnLeistungsartikel = MyBase.Columns("Leistungsartikel")
            Me.columnAufschlagstyp = MyBase.Columns("Aufschlagstyp")
            Me.columnArbeitsplanID = MyBase.Columns("ArbeitsplanID")
            Me.columnAuftragsTypID = MyBase.Columns("AuftragsTypID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnART_ID = New Global.System.Data.DataColumn("ART_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnART_ID)
            Me.columnArtikelnummer = New Global.System.Data.DataColumn("Artikelnummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtikelnummer)
            Me.columnEANNummer = New Global.System.Data.DataColumn("EANNummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEANNummer)
            Me.columnBezeichnung = New Global.System.Data.DataColumn("Bezeichnung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBezeichnung)
            Me.columnZusatz = New Global.System.Data.DataColumn("Zusatz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZusatz)
            Me.columnMatchcode = New Global.System.Data.DataColumn("Matchcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMatchcode)
            Me.columnArtikelgruppe = New Global.System.Data.DataColumn("Artikelgruppe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtikelgruppe)
            Me.columnErfolgskontengruppe = New Global.System.Data.DataColumn("Erfolgskontengruppe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErfolgskontengruppe)
            Me.columnAufwandskontengruppe = New Global.System.Data.DataColumn("Aufwandskontengruppe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAufwandskontengruppe)
            Me.columnMengenstaffel = New Global.System.Data.DataColumn("Mengenstaffel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMengenstaffel)
            Me.columnSSEinkauf = New Global.System.Data.DataColumn("SSEinkauf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSEinkauf)
            Me.columnKontoEinkauf = New Global.System.Data.DataColumn("KontoEinkauf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKontoEinkauf)
            Me.columnSSVerkauf = New Global.System.Data.DataColumn("SSVerkauf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSVerkauf)
            Me.columnKontoVerkauf = New Global.System.Data.DataColumn("KontoVerkauf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKontoVerkauf)
            Me.columnMengeneinheit = New Global.System.Data.DataColumn("Mengeneinheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMengeneinheit)
            Me.columnPreisverweis = New Global.System.Data.DataColumn("Preisverweis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreisverweis)
            Me.columnPreiseinheit = New Global.System.Data.DataColumn("Preiseinheit", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreiseinheit)
            Me.columnGewicht = New Global.System.Data.DataColumn("Gewicht", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGewicht)
            Me.columnLagerartikel = New Global.System.Data.DataColumn("Lagerartikel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLagerartikel)
            Me.columnMengenformel = New Global.System.Data.DataColumn("Mengenformel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMengenformel)
            Me.columnStueckliste = New Global.System.Data.DataColumn("Stueckliste", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStueckliste)
            Me.columnSerieCharge = New Global.System.Data.DataColumn("SerieCharge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSerieCharge)
            Me.columnVariantenartikel = New Global.System.Data.DataColumn("Variantenartikel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVariantenartikel)
            Me.columnMinusWarnung = New Global.System.Data.DataColumn("MinusWarnung", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinusWarnung)
            Me.columnProvisionsfaehig = New Global.System.Data.DataColumn("Provisionsfaehig", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvisionsfaehig)
            Me.columnRabattfaehig = New Global.System.Data.DataColumn("Rabattfaehig", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRabattfaehig)
            Me.columnSkontofaehig = New Global.System.Data.DataColumn("Skontofaehig", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontofaehig)
            Me.columnProvisionsgruppe = New Global.System.Data.DataColumn("Provisionsgruppe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvisionsgruppe)
            Me.columnHersteller = New Global.System.Data.DataColumn("Hersteller", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHersteller)
            Me.columnHstArtikelnummer = New Global.System.Data.DataColumn("HstArtikelnummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHstArtikelnummer)
            Me.columnLieferant = New Global.System.Data.DataColumn("Lieferant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLieferant)
            Me.columnDispositionsart = New Global.System.Data.DataColumn("Dispositionsart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDispositionsart)
            Me.columnAutoBestellung = New Global.System.Data.DataColumn("AutoBestellung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutoBestellung)
            Me.columnLagerstrategie = New Global.System.Data.DataColumn("Lagerstrategie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLagerstrategie)
            Me.columnAuslaufdatum = New Global.System.Data.DataColumn("Auslaufdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuslaufdatum)
            Me.columnInaktiv = New Global.System.Data.DataColumn("Inaktiv", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInaktiv)
            Me.columnAngelegtAm = New Global.System.Data.DataColumn("AngelegtAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAngelegtAm)
            Me.columnAngelegtVon = New Global.System.Data.DataColumn("AngelegtVon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAngelegtVon)
            Me.columnGeaendertAm = New Global.System.Data.DataColumn("GeaendertAm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeaendertAm)
            Me.columnGeaendertVon = New Global.System.Data.DataColumn("GeaendertVon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeaendertVon)
            Me.columnFreierText1 = New Global.System.Data.DataColumn("FreierText1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreierText1)
            Me.columnFreierText2 = New Global.System.Data.DataColumn("FreierText2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreierText2)
            Me.columnFreieZahl1 = New Global.System.Data.DataColumn("FreieZahl1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreieZahl1)
            Me.columnFreieZahl2 = New Global.System.Data.DataColumn("FreieZahl2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreieZahl2)
            Me.columnFreieZahl3 = New Global.System.Data.DataColumn("FreieZahl3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreieZahl3)
            Me.columnFreieZahl4 = New Global.System.Data.DataColumn("FreieZahl4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreieZahl4)
            Me.columnFreiesDatum1 = New Global.System.Data.DataColumn("FreiesDatum1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreiesDatum1)
            Me.columnFreiesDatum2 = New Global.System.Data.DataColumn("FreiesDatum2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreiesDatum2)
            Me.columnFreiesKennzeichen1 = New Global.System.Data.DataColumn("FreiesKennzeichen1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreiesKennzeichen1)
            Me.columnFreiesKennzeichen2 = New Global.System.Data.DataColumn("FreiesKennzeichen2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreiesKennzeichen2)
            Me.columnFreiesKennzeichen3 = New Global.System.Data.DataColumn("FreiesKennzeichen3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreiesKennzeichen3)
            Me.columnFreiesKennzeichen4 = New Global.System.Data.DataColumn("FreiesKennzeichen4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreiesKennzeichen4)
            Me.columnSSEG = New Global.System.Data.DataColumn("SSEG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSEG)
            Me.columnSSImport = New Global.System.Data.DataColumn("SSImport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSImport)
            Me.columnSSExport = New Global.System.Data.DataColumn("SSExport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSSExport)
            Me.columnShopAktiv = New Global.System.Data.DataColumn("ShopAktiv", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShopAktiv)
            Me.columnRegion = New Global.System.Data.DataColumn("Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "RegionColumn")
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnRegion")
            Me.columnRegion.ExtendedProperties.Add("Generator_UserColumnName", "Region")
            MyBase.Columns.Add(Me.columnRegion)
            Me.columnUrsprungsland = New Global.System.Data.DataColumn("Ursprungsland", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUrsprungsland)
            Me.columnGeschaeftsart = New Global.System.Data.DataColumn("Geschaeftsart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeschaeftsart)
            Me.columnWarencode = New Global.System.Data.DataColumn("Warencode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWarencode)
            Me.columnStatVersand = New Global.System.Data.DataColumn("StatVersand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatVersand)
            Me.columnStatEingang = New Global.System.Data.DataColumn("StatEingang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatEingang)
            Me.columnStatWertEuro = New Global.System.Data.DataColumn("StatWertEuro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatWertEuro)
            Me.columnKostenstelle = New Global.System.Data.DataColumn("Kostenstelle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKostenstelle)
            Me.columnKostentraeger = New Global.System.Data.DataColumn("Kostentraeger", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKostentraeger)
            Me.columnDNExport = New Global.System.Data.DataColumn("DNExport", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDNExport)
            Me.columnAusschussartikelnummer = New Global.System.Data.DataColumn("Ausschussartikelnummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAusschussartikelnummer)
            Me.columnProduktionslager = New Global.System.Data.DataColumn("Produktionslager", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduktionslager)
            Me.columnAusschussBewertung = New Global.System.Data.DataColumn("AusschussBewertung", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAusschussBewertung)
            Me.columnVerfallsfrist = New Global.System.Data.DataColumn("Verfallsfrist", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerfallsfrist)
            Me.columnTS = New Global.System.Data.DataColumn("TS", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS)
            Me.column_HERSTELLERNAME = New Global.System.Data.DataColumn("_HERSTELLERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_HERSTELLERNAME)
            Me.column_LIEFERANTNAME = New Global.System.Data.DataColumn("_LIEFERANTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_LIEFERANTNAME)
            Me.column_EV = New Global.System.Data.DataColumn("_EV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_EV)
            Me.column_EXBESTNR = New Global.System.Data.DataColumn("_EXBESTNR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_EXBESTNR)
            Me.columnPreismengeneinheit = New Global.System.Data.DataColumn("Preismengeneinheit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreismengeneinheit)
            Me.columnPreismengenfaktor = New Global.System.Data.DataColumn("Preismengenfaktor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreismengenfaktor)
            Me.columnLosgroesseVerkauf = New Global.System.Data.DataColumn("LosgroesseVerkauf", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLosgroesseVerkauf)
            Me.columnBestandsauswahl = New Global.System.Data.DataColumn("Bestandsauswahl", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBestandsauswahl)
            Me.column_VERFUEGBAR = New Global.System.Data.DataColumn("_VERFUEGBAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_VERFUEGBAR)
            Me.column_ARTIKELNUMMERALT = New Global.System.Data.DataColumn("_ARTIKELNUMMERALT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_ARTIKELNUMMERALT)
            Me.column_LAGERNEU = New Global.System.Data.DataColumn("_LAGERNEU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_LAGERNEU)
            Me.column_LAGERPLATZNEU = New Global.System.Data.DataColumn("_LAGERPLATZNEU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_LAGERPLATZNEU)
            Me.columnLeistungsartikel = New Global.System.Data.DataColumn("Leistungsartikel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeistungsartikel)
            Me.columnAufschlagstyp = New Global.System.Data.DataColumn("Aufschlagstyp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAufschlagstyp)
            Me.columnArbeitsplanID = New Global.System.Data.DataColumn("ArbeitsplanID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArbeitsplanID)
            Me.columnAuftragsTypID = New Global.System.Data.DataColumn("AuftragsTypID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuftragsTypID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnART_ID}, true))
            Me.columnART_ID.AutoIncrement = true
            Me.columnART_ID.AutoIncrementSeed = -1
            Me.columnART_ID.AutoIncrementStep = -1
            Me.columnART_ID.AllowDBNull = false
            Me.columnART_ID.ReadOnly = true
            Me.columnART_ID.Unique = true
            Me.columnArtikelnummer.AllowDBNull = false
            Me.columnArtikelnummer.MaxLength = 18
            Me.columnEANNummer.MaxLength = 18
            Me.columnBezeichnung.MaxLength = 80
            Me.columnZusatz.MaxLength = 80
            Me.columnMatchcode.MaxLength = 80
            Me.columnArtikelgruppe.MaxLength = 13
            Me.columnErfolgskontengruppe.MaxLength = 6
            Me.columnAufwandskontengruppe.MaxLength = 6
            Me.columnMengenstaffel.MaxLength = 6
            Me.columnSSEinkauf.MaxLength = 2
            Me.columnKontoEinkauf.MaxLength = 15
            Me.columnSSVerkauf.MaxLength = 2
            Me.columnKontoVerkauf.MaxLength = 15
            Me.columnMengeneinheit.MaxLength = 10
            Me.columnPreisverweis.MaxLength = 18
            Me.columnMengenformel.MaxLength = 6
            Me.columnStueckliste.MaxLength = 1
            Me.columnSerieCharge.MaxLength = 1
            Me.columnVariantenartikel.MaxLength = 18
            Me.columnProvisionsgruppe.MaxLength = 4
            Me.columnHersteller.MaxLength = 13
            Me.columnHstArtikelnummer.MaxLength = 40
            Me.columnLieferant.MaxLength = 13
            Me.columnDispositionsart.MaxLength = 1
            Me.columnAutoBestellung.MaxLength = 1
            Me.columnLagerstrategie.MaxLength = 1
            Me.columnInaktiv.AllowDBNull = false
            Me.columnAngelegtVon.MaxLength = 2
            Me.columnGeaendertVon.MaxLength = 2
            Me.columnFreierText1.MaxLength = 80
            Me.columnFreierText2.MaxLength = 80
            Me.columnSSEG.MaxLength = 2
            Me.columnSSImport.MaxLength = 2
            Me.columnSSExport.MaxLength = 2
            Me.columnRegion.MaxLength = 2
            Me.columnUrsprungsland.MaxLength = 2
            Me.columnGeschaeftsart.MaxLength = 2
            Me.columnWarencode.MaxLength = 8
            Me.columnStatVersand.MaxLength = 6
            Me.columnStatEingang.MaxLength = 6
            Me.columnKostenstelle.MaxLength = 15
            Me.columnKostentraeger.MaxLength = 15
            Me.columnDNExport.MaxLength = 1
            Me.columnAusschussartikelnummer.MaxLength = 18
            Me.columnProduktionslager.MaxLength = 10
            Me.columnTS.ReadOnly = true
            Me.column_HERSTELLERNAME.MaxLength = 40
            Me.column_LIEFERANTNAME.MaxLength = 40
            Me.column_EV.MaxLength = 1
            Me.column_EXBESTNR.MaxLength = 250
            Me.columnPreismengeneinheit.MaxLength = 10
            Me.columnLosgroesseVerkauf.AllowDBNull = false
            Me.columnBestandsauswahl.AllowDBNull = false
            Me.column_VERFUEGBAR.MaxLength = 20
            Me.column_ARTIKELNUMMERALT.MaxLength = 18
            Me.column_LAGERNEU.MaxLength = 30
            Me.column_LAGERPLATZNEU.MaxLength = 30
            Me.columnAufschlagstyp.MaxLength = 1
            Me.columnArbeitsplanID.MaxLength = 18
            Me.columnAuftragsTypID.MaxLength = 18
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewARTRow() As ARTRow
            Return CType(Me.NewRow,ARTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ARTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ARTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ARTRowChangedEvent) Is Nothing) Then
                RaiseEvent ARTRowChanged(Me, New ARTRowChangeEvent(CType(e.Row,ARTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ARTRowChangingEvent) Is Nothing) Then
                RaiseEvent ARTRowChanging(Me, New ARTRowChangeEvent(CType(e.Row,ARTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ARTRowDeletedEvent) Is Nothing) Then
                RaiseEvent ARTRowDeleted(Me, New ARTRowChangeEvent(CType(e.Row,ARTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ARTRowDeletingEvent) Is Nothing) Then
                RaiseEvent ARTRowDeleting(Me, New ARTRowChangeEvent(CType(e.Row,ARTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveARTRow(ByVal row As ARTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Artikel = New Artikel()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ARTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ARTRow
        Inherits Global.System.Data.DataRow
        
        Private tableART As ARTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableART = CType(Me.Table,ARTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ART_ID() As Integer
            Get
                Return CType(Me(Me.tableART.ART_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableART.ART_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Artikelnummer() As String
            Get
                Return CType(Me(Me.tableART.ArtikelnummerColumn),String)
            End Get
            Set
                Me(Me.tableART.ArtikelnummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EANNummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.EANNummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EANNummer in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.EANNummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bezeichnung() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.BezeichnungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Bezeichnung in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.BezeichnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zusatz() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.ZusatzColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zusatz in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ZusatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Matchcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.MatchcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Matchcode in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.MatchcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Artikelgruppe() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.ArtikelgruppeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Artikelgruppe in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ArtikelgruppeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Erfolgskontengruppe() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.ErfolgskontengruppeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Erfolgskontengruppe in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ErfolgskontengruppeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Aufwandskontengruppe() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.AufwandskontengruppeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Aufwandskontengruppe in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AufwandskontengruppeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mengenstaffel() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.MengenstaffelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Mengenstaffel in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.MengenstaffelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SSEinkauf() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.SSEinkaufColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SSEinkauf in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SSEinkaufColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KontoEinkauf() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.KontoEinkaufColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KontoEinkauf in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.KontoEinkaufColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SSVerkauf() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.SSVerkaufColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SSVerkauf in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SSVerkaufColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KontoVerkauf() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.KontoVerkaufColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KontoVerkauf in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.KontoVerkaufColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mengeneinheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.MengeneinheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Mengeneinheit in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.MengeneinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Preisverweis() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.PreisverweisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Preisverweis in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.PreisverweisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Preiseinheit() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.PreiseinheitColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Preiseinheit in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.PreiseinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Gewicht() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.GewichtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Gewicht in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.GewichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Lagerartikel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.LagerartikelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Lagerartikel in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.LagerartikelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mengenformel() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.MengenformelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Mengenformel in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.MengenformelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stueckliste() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.StuecklisteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Stueckliste in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.StuecklisteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SerieCharge() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.SerieChargeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SerieCharge in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SerieChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Variantenartikel() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.VariantenartikelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Variantenartikel in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.VariantenartikelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MinusWarnung() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.MinusWarnungColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MinusWarnung in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.MinusWarnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Provisionsfaehig() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.ProvisionsfaehigColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Provisionsfaehig in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ProvisionsfaehigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rabattfaehig() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.RabattfaehigColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Rabattfaehig in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.RabattfaehigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skontofaehig() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.SkontofaehigColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skontofaehig in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SkontofaehigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Provisionsgruppe() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.ProvisionsgruppeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Provisionsgruppe in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ProvisionsgruppeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hersteller() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.HerstellerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Hersteller in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.HerstellerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HstArtikelnummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.HstArtikelnummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte HstArtikelnummer in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.HstArtikelnummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Lieferant() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.LieferantColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Lieferant in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.LieferantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dispositionsart() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.DispositionsartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Dispositionsart in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.DispositionsartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AutoBestellung() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.AutoBestellungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AutoBestellung in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AutoBestellungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Lagerstrategie() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.LagerstrategieColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Lagerstrategie in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.LagerstrategieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Auslaufdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableART.AuslaufdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Auslaufdatum in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AuslaufdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inaktiv() As Boolean
            Get
                Return CType(Me(Me.tableART.InaktivColumn),Boolean)
            End Get
            Set
                Me(Me.tableART.InaktivColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AngelegtAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableART.AngelegtAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AngelegtAm in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AngelegtAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AngelegtVon() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.AngelegtVonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AngelegtVon in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AngelegtVonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GeaendertAm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableART.GeaendertAmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GeaendertAm in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.GeaendertAmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GeaendertVon() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.GeaendertVonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GeaendertVon in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.GeaendertVonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreierText1() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.FreierText1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreierText1 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreierText1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreierText2() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.FreierText2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreierText2 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreierText2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreieZahl1() As Short
            Get
                Try 
                    Return CType(Me(Me.tableART.FreieZahl1Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreieZahl1 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreieZahl1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreieZahl2() As Short
            Get
                Try 
                    Return CType(Me(Me.tableART.FreieZahl2Column),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreieZahl2 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreieZahl2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreieZahl3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.FreieZahl3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreieZahl3 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreieZahl3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreieZahl4() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.FreieZahl4Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreieZahl4 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreieZahl4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreiesDatum1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableART.FreiesDatum1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreiesDatum1 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreiesDatum1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreiesDatum2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableART.FreiesDatum2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreiesDatum2 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreiesDatum2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreiesKennzeichen1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.FreiesKennzeichen1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreiesKennzeichen1 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreiesKennzeichen1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreiesKennzeichen2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.FreiesKennzeichen2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreiesKennzeichen2 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreiesKennzeichen2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreiesKennzeichen3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.FreiesKennzeichen3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreiesKennzeichen3 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreiesKennzeichen3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FreiesKennzeichen4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.FreiesKennzeichen4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FreiesKennzeichen4 in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.FreiesKennzeichen4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SSEG() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.SSEGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SSEG in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SSEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SSImport() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.SSImportColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SSImport in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SSImportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SSExport() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.SSExportColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SSExport in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.SSExportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ShopAktiv() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.ShopAktivColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ShopAktiv in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ShopAktivColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Region in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ursprungsland() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.UrsprungslandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Ursprungsland in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.UrsprungslandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Geschaeftsart() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.GeschaeftsartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Geschaeftsart in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.GeschaeftsartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Warencode() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.WarencodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Warencode in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.WarencodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatVersand() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.StatVersandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte StatVersand in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.StatVersandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatEingang() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.StatEingangColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte StatEingang in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.StatEingangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatWertEuro() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.StatWertEuroColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte StatWertEuro in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.StatWertEuroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kostenstelle() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.KostenstelleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Kostenstelle in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.KostenstelleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kostentraeger() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.KostentraegerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Kostentraeger in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.KostentraegerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DNExport() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.DNExportColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DNExport in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.DNExportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ausschussartikelnummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.AusschussartikelnummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Ausschussartikelnummer in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AusschussartikelnummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Produktionslager() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.ProduktionslagerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Produktionslager in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ProduktionslagerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AusschussBewertung() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.AusschussBewertungColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AusschussBewertung in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AusschussBewertungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Verfallsfrist() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableART.VerfallsfristColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Verfallsfrist in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.VerfallsfristColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TS() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableART.TSColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TS in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.TSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _HERSTELLERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._HERSTELLERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _HERSTELLERNAME in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._HERSTELLERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _LIEFERANTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._LIEFERANTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _LIEFERANTNAME in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._LIEFERANTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _EV() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._EVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _EV in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._EVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _EXBESTNR() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._EXBESTNRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _EXBESTNR in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._EXBESTNRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Preismengeneinheit() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.PreismengeneinheitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Preismengeneinheit in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.PreismengeneinheitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Preismengenfaktor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableART.PreismengenfaktorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Preismengenfaktor in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.PreismengenfaktorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LosgroesseVerkauf() As Integer
            Get
                Return CType(Me(Me.tableART.LosgroesseVerkaufColumn),Integer)
            End Get
            Set
                Me(Me.tableART.LosgroesseVerkaufColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bestandsauswahl() As Boolean
            Get
                Return CType(Me(Me.tableART.BestandsauswahlColumn),Boolean)
            End Get
            Set
                Me(Me.tableART.BestandsauswahlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _VERFUEGBAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._VERFUEGBARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _VERFUEGBAR in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._VERFUEGBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _ARTIKELNUMMERALT() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._ARTIKELNUMMERALTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _ARTIKELNUMMERALT in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._ARTIKELNUMMERALTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _LAGERNEU() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._LAGERNEUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _LAGERNEU in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._LAGERNEUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _LAGERPLATZNEU() As String
            Get
                Try 
                    Return CType(Me(Me.tableART._LAGERPLATZNEUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte _LAGERPLATZNEU in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART._LAGERPLATZNEUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Leistungsartikel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableART.LeistungsartikelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Leistungsartikel in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.LeistungsartikelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Aufschlagstyp() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.AufschlagstypColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Aufschlagstyp in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AufschlagstypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ArbeitsplanID() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.ArbeitsplanIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ArbeitsplanID in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.ArbeitsplanIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AuftragsTypID() As String
            Get
                Try 
                    Return CType(Me(Me.tableART.AuftragsTypIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AuftragsTypID in Tabelle ART ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableART.AuftragsTypIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEANNummerNull() As Boolean
            Return Me.IsNull(Me.tableART.EANNummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEANNummerNull()
            Me(Me.tableART.EANNummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBezeichnungNull() As Boolean
            Return Me.IsNull(Me.tableART.BezeichnungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBezeichnungNull()
            Me(Me.tableART.BezeichnungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZusatzNull() As Boolean
            Return Me.IsNull(Me.tableART.ZusatzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZusatzNull()
            Me(Me.tableART.ZusatzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMatchcodeNull() As Boolean
            Return Me.IsNull(Me.tableART.MatchcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMatchcodeNull()
            Me(Me.tableART.MatchcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsArtikelgruppeNull() As Boolean
            Return Me.IsNull(Me.tableART.ArtikelgruppeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetArtikelgruppeNull()
            Me(Me.tableART.ArtikelgruppeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsErfolgskontengruppeNull() As Boolean
            Return Me.IsNull(Me.tableART.ErfolgskontengruppeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetErfolgskontengruppeNull()
            Me(Me.tableART.ErfolgskontengruppeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAufwandskontengruppeNull() As Boolean
            Return Me.IsNull(Me.tableART.AufwandskontengruppeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAufwandskontengruppeNull()
            Me(Me.tableART.AufwandskontengruppeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengenstaffelNull() As Boolean
            Return Me.IsNull(Me.tableART.MengenstaffelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengenstaffelNull()
            Me(Me.tableART.MengenstaffelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSSEinkaufNull() As Boolean
            Return Me.IsNull(Me.tableART.SSEinkaufColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSSEinkaufNull()
            Me(Me.tableART.SSEinkaufColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKontoEinkaufNull() As Boolean
            Return Me.IsNull(Me.tableART.KontoEinkaufColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKontoEinkaufNull()
            Me(Me.tableART.KontoEinkaufColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSSVerkaufNull() As Boolean
            Return Me.IsNull(Me.tableART.SSVerkaufColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSSVerkaufNull()
            Me(Me.tableART.SSVerkaufColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKontoVerkaufNull() As Boolean
            Return Me.IsNull(Me.tableART.KontoVerkaufColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKontoVerkaufNull()
            Me(Me.tableART.KontoVerkaufColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengeneinheitNull() As Boolean
            Return Me.IsNull(Me.tableART.MengeneinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengeneinheitNull()
            Me(Me.tableART.MengeneinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreisverweisNull() As Boolean
            Return Me.IsNull(Me.tableART.PreisverweisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreisverweisNull()
            Me(Me.tableART.PreisverweisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreiseinheitNull() As Boolean
            Return Me.IsNull(Me.tableART.PreiseinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreiseinheitNull()
            Me(Me.tableART.PreiseinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGewichtNull() As Boolean
            Return Me.IsNull(Me.tableART.GewichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGewichtNull()
            Me(Me.tableART.GewichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLagerartikelNull() As Boolean
            Return Me.IsNull(Me.tableART.LagerartikelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLagerartikelNull()
            Me(Me.tableART.LagerartikelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMengenformelNull() As Boolean
            Return Me.IsNull(Me.tableART.MengenformelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMengenformelNull()
            Me(Me.tableART.MengenformelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStuecklisteNull() As Boolean
            Return Me.IsNull(Me.tableART.StuecklisteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStuecklisteNull()
            Me(Me.tableART.StuecklisteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSerieChargeNull() As Boolean
            Return Me.IsNull(Me.tableART.SerieChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSerieChargeNull()
            Me(Me.tableART.SerieChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVariantenartikelNull() As Boolean
            Return Me.IsNull(Me.tableART.VariantenartikelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVariantenartikelNull()
            Me(Me.tableART.VariantenartikelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMinusWarnungNull() As Boolean
            Return Me.IsNull(Me.tableART.MinusWarnungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMinusWarnungNull()
            Me(Me.tableART.MinusWarnungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProvisionsfaehigNull() As Boolean
            Return Me.IsNull(Me.tableART.ProvisionsfaehigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProvisionsfaehigNull()
            Me(Me.tableART.ProvisionsfaehigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRabattfaehigNull() As Boolean
            Return Me.IsNull(Me.tableART.RabattfaehigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRabattfaehigNull()
            Me(Me.tableART.RabattfaehigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkontofaehigNull() As Boolean
            Return Me.IsNull(Me.tableART.SkontofaehigColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkontofaehigNull()
            Me(Me.tableART.SkontofaehigColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProvisionsgruppeNull() As Boolean
            Return Me.IsNull(Me.tableART.ProvisionsgruppeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProvisionsgruppeNull()
            Me(Me.tableART.ProvisionsgruppeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHerstellerNull() As Boolean
            Return Me.IsNull(Me.tableART.HerstellerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHerstellerNull()
            Me(Me.tableART.HerstellerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHstArtikelnummerNull() As Boolean
            Return Me.IsNull(Me.tableART.HstArtikelnummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHstArtikelnummerNull()
            Me(Me.tableART.HstArtikelnummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLieferantNull() As Boolean
            Return Me.IsNull(Me.tableART.LieferantColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLieferantNull()
            Me(Me.tableART.LieferantColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDispositionsartNull() As Boolean
            Return Me.IsNull(Me.tableART.DispositionsartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDispositionsartNull()
            Me(Me.tableART.DispositionsartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAutoBestellungNull() As Boolean
            Return Me.IsNull(Me.tableART.AutoBestellungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAutoBestellungNull()
            Me(Me.tableART.AutoBestellungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLagerstrategieNull() As Boolean
            Return Me.IsNull(Me.tableART.LagerstrategieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLagerstrategieNull()
            Me(Me.tableART.LagerstrategieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAuslaufdatumNull() As Boolean
            Return Me.IsNull(Me.tableART.AuslaufdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAuslaufdatumNull()
            Me(Me.tableART.AuslaufdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAngelegtAmNull() As Boolean
            Return Me.IsNull(Me.tableART.AngelegtAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAngelegtAmNull()
            Me(Me.tableART.AngelegtAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAngelegtVonNull() As Boolean
            Return Me.IsNull(Me.tableART.AngelegtVonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAngelegtVonNull()
            Me(Me.tableART.AngelegtVonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeaendertAmNull() As Boolean
            Return Me.IsNull(Me.tableART.GeaendertAmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeaendertAmNull()
            Me(Me.tableART.GeaendertAmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeaendertVonNull() As Boolean
            Return Me.IsNull(Me.tableART.GeaendertVonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeaendertVonNull()
            Me(Me.tableART.GeaendertVonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreierText1Null() As Boolean
            Return Me.IsNull(Me.tableART.FreierText1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreierText1Null()
            Me(Me.tableART.FreierText1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreierText2Null() As Boolean
            Return Me.IsNull(Me.tableART.FreierText2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreierText2Null()
            Me(Me.tableART.FreierText2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreieZahl1Null() As Boolean
            Return Me.IsNull(Me.tableART.FreieZahl1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreieZahl1Null()
            Me(Me.tableART.FreieZahl1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreieZahl2Null() As Boolean
            Return Me.IsNull(Me.tableART.FreieZahl2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreieZahl2Null()
            Me(Me.tableART.FreieZahl2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreieZahl3Null() As Boolean
            Return Me.IsNull(Me.tableART.FreieZahl3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreieZahl3Null()
            Me(Me.tableART.FreieZahl3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreieZahl4Null() As Boolean
            Return Me.IsNull(Me.tableART.FreieZahl4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreieZahl4Null()
            Me(Me.tableART.FreieZahl4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreiesDatum1Null() As Boolean
            Return Me.IsNull(Me.tableART.FreiesDatum1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreiesDatum1Null()
            Me(Me.tableART.FreiesDatum1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreiesDatum2Null() As Boolean
            Return Me.IsNull(Me.tableART.FreiesDatum2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreiesDatum2Null()
            Me(Me.tableART.FreiesDatum2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreiesKennzeichen1Null() As Boolean
            Return Me.IsNull(Me.tableART.FreiesKennzeichen1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreiesKennzeichen1Null()
            Me(Me.tableART.FreiesKennzeichen1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreiesKennzeichen2Null() As Boolean
            Return Me.IsNull(Me.tableART.FreiesKennzeichen2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreiesKennzeichen2Null()
            Me(Me.tableART.FreiesKennzeichen2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreiesKennzeichen3Null() As Boolean
            Return Me.IsNull(Me.tableART.FreiesKennzeichen3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreiesKennzeichen3Null()
            Me(Me.tableART.FreiesKennzeichen3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreiesKennzeichen4Null() As Boolean
            Return Me.IsNull(Me.tableART.FreiesKennzeichen4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreiesKennzeichen4Null()
            Me(Me.tableART.FreiesKennzeichen4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSSEGNull() As Boolean
            Return Me.IsNull(Me.tableART.SSEGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSSEGNull()
            Me(Me.tableART.SSEGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSSImportNull() As Boolean
            Return Me.IsNull(Me.tableART.SSImportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSSImportNull()
            Me(Me.tableART.SSImportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSSExportNull() As Boolean
            Return Me.IsNull(Me.tableART.SSExportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSSExportNull()
            Me(Me.tableART.SSExportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsShopAktivNull() As Boolean
            Return Me.IsNull(Me.tableART.ShopAktivColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetShopAktivNull()
            Me(Me.tableART.ShopAktivColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_RegionNull() As Boolean
            Return Me.IsNull(Me.tableART.RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_RegionNull()
            Me(Me.tableART.RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUrsprungslandNull() As Boolean
            Return Me.IsNull(Me.tableART.UrsprungslandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUrsprungslandNull()
            Me(Me.tableART.UrsprungslandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeschaeftsartNull() As Boolean
            Return Me.IsNull(Me.tableART.GeschaeftsartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeschaeftsartNull()
            Me(Me.tableART.GeschaeftsartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWarencodeNull() As Boolean
            Return Me.IsNull(Me.tableART.WarencodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWarencodeNull()
            Me(Me.tableART.WarencodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatVersandNull() As Boolean
            Return Me.IsNull(Me.tableART.StatVersandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatVersandNull()
            Me(Me.tableART.StatVersandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatEingangNull() As Boolean
            Return Me.IsNull(Me.tableART.StatEingangColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatEingangNull()
            Me(Me.tableART.StatEingangColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatWertEuroNull() As Boolean
            Return Me.IsNull(Me.tableART.StatWertEuroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatWertEuroNull()
            Me(Me.tableART.StatWertEuroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKostenstelleNull() As Boolean
            Return Me.IsNull(Me.tableART.KostenstelleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKostenstelleNull()
            Me(Me.tableART.KostenstelleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKostentraegerNull() As Boolean
            Return Me.IsNull(Me.tableART.KostentraegerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKostentraegerNull()
            Me(Me.tableART.KostentraegerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDNExportNull() As Boolean
            Return Me.IsNull(Me.tableART.DNExportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDNExportNull()
            Me(Me.tableART.DNExportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAusschussartikelnummerNull() As Boolean
            Return Me.IsNull(Me.tableART.AusschussartikelnummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAusschussartikelnummerNull()
            Me(Me.tableART.AusschussartikelnummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduktionslagerNull() As Boolean
            Return Me.IsNull(Me.tableART.ProduktionslagerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduktionslagerNull()
            Me(Me.tableART.ProduktionslagerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAusschussBewertungNull() As Boolean
            Return Me.IsNull(Me.tableART.AusschussBewertungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAusschussBewertungNull()
            Me(Me.tableART.AusschussBewertungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVerfallsfristNull() As Boolean
            Return Me.IsNull(Me.tableART.VerfallsfristColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVerfallsfristNull()
            Me(Me.tableART.VerfallsfristColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTSNull() As Boolean
            Return Me.IsNull(Me.tableART.TSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTSNull()
            Me(Me.tableART.TSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_HERSTELLERNAMENull() As Boolean
            Return Me.IsNull(Me.tableART._HERSTELLERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_HERSTELLERNAMENull()
            Me(Me.tableART._HERSTELLERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_LIEFERANTNAMENull() As Boolean
            Return Me.IsNull(Me.tableART._LIEFERANTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_LIEFERANTNAMENull()
            Me(Me.tableART._LIEFERANTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_EVNull() As Boolean
            Return Me.IsNull(Me.tableART._EVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_EVNull()
            Me(Me.tableART._EVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_EXBESTNRNull() As Boolean
            Return Me.IsNull(Me.tableART._EXBESTNRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_EXBESTNRNull()
            Me(Me.tableART._EXBESTNRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreismengeneinheitNull() As Boolean
            Return Me.IsNull(Me.tableART.PreismengeneinheitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreismengeneinheitNull()
            Me(Me.tableART.PreismengeneinheitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreismengenfaktorNull() As Boolean
            Return Me.IsNull(Me.tableART.PreismengenfaktorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreismengenfaktorNull()
            Me(Me.tableART.PreismengenfaktorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_VERFUEGBARNull() As Boolean
            Return Me.IsNull(Me.tableART._VERFUEGBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_VERFUEGBARNull()
            Me(Me.tableART._VERFUEGBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_ARTIKELNUMMERALTNull() As Boolean
            Return Me.IsNull(Me.tableART._ARTIKELNUMMERALTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_ARTIKELNUMMERALTNull()
            Me(Me.tableART._ARTIKELNUMMERALTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_LAGERNEUNull() As Boolean
            Return Me.IsNull(Me.tableART._LAGERNEUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_LAGERNEUNull()
            Me(Me.tableART._LAGERNEUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_LAGERPLATZNEUNull() As Boolean
            Return Me.IsNull(Me.tableART._LAGERPLATZNEUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_LAGERPLATZNEUNull()
            Me(Me.tableART._LAGERPLATZNEUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLeistungsartikelNull() As Boolean
            Return Me.IsNull(Me.tableART.LeistungsartikelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLeistungsartikelNull()
            Me(Me.tableART.LeistungsartikelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAufschlagstypNull() As Boolean
            Return Me.IsNull(Me.tableART.AufschlagstypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAufschlagstypNull()
            Me(Me.tableART.AufschlagstypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsArbeitsplanIDNull() As Boolean
            Return Me.IsNull(Me.tableART.ArbeitsplanIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetArbeitsplanIDNull()
            Me(Me.tableART.ArbeitsplanIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAuftragsTypIDNull() As Boolean
            Return Me.IsNull(Me.tableART.AuftragsTypIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAuftragsTypIDNull()
            Me(Me.tableART.AuftragsTypIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ARTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ARTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ARTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ARTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ArtikelTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ARTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ART"
            tableMapping.ColumnMappings.Add("ART_ID", "ART_ID")
            tableMapping.ColumnMappings.Add("Artikelnummer", "Artikelnummer")
            tableMapping.ColumnMappings.Add("EANNummer", "EANNummer")
            tableMapping.ColumnMappings.Add("Bezeichnung", "Bezeichnung")
            tableMapping.ColumnMappings.Add("Zusatz", "Zusatz")
            tableMapping.ColumnMappings.Add("Matchcode", "Matchcode")
            tableMapping.ColumnMappings.Add("Artikelgruppe", "Artikelgruppe")
            tableMapping.ColumnMappings.Add("Erfolgskontengruppe", "Erfolgskontengruppe")
            tableMapping.ColumnMappings.Add("Aufwandskontengruppe", "Aufwandskontengruppe")
            tableMapping.ColumnMappings.Add("Mengenstaffel", "Mengenstaffel")
            tableMapping.ColumnMappings.Add("SSEinkauf", "SSEinkauf")
            tableMapping.ColumnMappings.Add("KontoEinkauf", "KontoEinkauf")
            tableMapping.ColumnMappings.Add("SSVerkauf", "SSVerkauf")
            tableMapping.ColumnMappings.Add("KontoVerkauf", "KontoVerkauf")
            tableMapping.ColumnMappings.Add("Mengeneinheit", "Mengeneinheit")
            tableMapping.ColumnMappings.Add("Preisverweis", "Preisverweis")
            tableMapping.ColumnMappings.Add("Preiseinheit", "Preiseinheit")
            tableMapping.ColumnMappings.Add("Gewicht", "Gewicht")
            tableMapping.ColumnMappings.Add("Lagerartikel", "Lagerartikel")
            tableMapping.ColumnMappings.Add("Mengenformel", "Mengenformel")
            tableMapping.ColumnMappings.Add("Stueckliste", "Stueckliste")
            tableMapping.ColumnMappings.Add("SerieCharge", "SerieCharge")
            tableMapping.ColumnMappings.Add("Variantenartikel", "Variantenartikel")
            tableMapping.ColumnMappings.Add("MinusWarnung", "MinusWarnung")
            tableMapping.ColumnMappings.Add("Provisionsfaehig", "Provisionsfaehig")
            tableMapping.ColumnMappings.Add("Rabattfaehig", "Rabattfaehig")
            tableMapping.ColumnMappings.Add("Skontofaehig", "Skontofaehig")
            tableMapping.ColumnMappings.Add("Provisionsgruppe", "Provisionsgruppe")
            tableMapping.ColumnMappings.Add("Hersteller", "Hersteller")
            tableMapping.ColumnMappings.Add("HstArtikelnummer", "HstArtikelnummer")
            tableMapping.ColumnMappings.Add("Lieferant", "Lieferant")
            tableMapping.ColumnMappings.Add("Dispositionsart", "Dispositionsart")
            tableMapping.ColumnMappings.Add("AutoBestellung", "AutoBestellung")
            tableMapping.ColumnMappings.Add("Lagerstrategie", "Lagerstrategie")
            tableMapping.ColumnMappings.Add("Auslaufdatum", "Auslaufdatum")
            tableMapping.ColumnMappings.Add("Inaktiv", "Inaktiv")
            tableMapping.ColumnMappings.Add("AngelegtAm", "AngelegtAm")
            tableMapping.ColumnMappings.Add("AngelegtVon", "AngelegtVon")
            tableMapping.ColumnMappings.Add("GeaendertAm", "GeaendertAm")
            tableMapping.ColumnMappings.Add("GeaendertVon", "GeaendertVon")
            tableMapping.ColumnMappings.Add("FreierText1", "FreierText1")
            tableMapping.ColumnMappings.Add("FreierText2", "FreierText2")
            tableMapping.ColumnMappings.Add("FreieZahl1", "FreieZahl1")
            tableMapping.ColumnMappings.Add("FreieZahl2", "FreieZahl2")
            tableMapping.ColumnMappings.Add("FreieZahl3", "FreieZahl3")
            tableMapping.ColumnMappings.Add("FreieZahl4", "FreieZahl4")
            tableMapping.ColumnMappings.Add("FreiesDatum1", "FreiesDatum1")
            tableMapping.ColumnMappings.Add("FreiesDatum2", "FreiesDatum2")
            tableMapping.ColumnMappings.Add("FreiesKennzeichen1", "FreiesKennzeichen1")
            tableMapping.ColumnMappings.Add("FreiesKennzeichen2", "FreiesKennzeichen2")
            tableMapping.ColumnMappings.Add("FreiesKennzeichen3", "FreiesKennzeichen3")
            tableMapping.ColumnMappings.Add("FreiesKennzeichen4", "FreiesKennzeichen4")
            tableMapping.ColumnMappings.Add("SSEG", "SSEG")
            tableMapping.ColumnMappings.Add("SSImport", "SSImport")
            tableMapping.ColumnMappings.Add("SSExport", "SSExport")
            tableMapping.ColumnMappings.Add("ShopAktiv", "ShopAktiv")
            tableMapping.ColumnMappings.Add("Region", "Region")
            tableMapping.ColumnMappings.Add("Ursprungsland", "Ursprungsland")
            tableMapping.ColumnMappings.Add("Geschaeftsart", "Geschaeftsart")
            tableMapping.ColumnMappings.Add("Warencode", "Warencode")
            tableMapping.ColumnMappings.Add("StatVersand", "StatVersand")
            tableMapping.ColumnMappings.Add("StatEingang", "StatEingang")
            tableMapping.ColumnMappings.Add("StatWertEuro", "StatWertEuro")
            tableMapping.ColumnMappings.Add("Kostenstelle", "Kostenstelle")
            tableMapping.ColumnMappings.Add("Kostentraeger", "Kostentraeger")
            tableMapping.ColumnMappings.Add("DNExport", "DNExport")
            tableMapping.ColumnMappings.Add("Ausschussartikelnummer", "Ausschussartikelnummer")
            tableMapping.ColumnMappings.Add("Produktionslager", "Produktionslager")
            tableMapping.ColumnMappings.Add("AusschussBewertung", "AusschussBewertung")
            tableMapping.ColumnMappings.Add("Verfallsfrist", "Verfallsfrist")
            tableMapping.ColumnMappings.Add("TS", "TS")
            tableMapping.ColumnMappings.Add("_HERSTELLERNAME", "_HERSTELLERNAME")
            tableMapping.ColumnMappings.Add("_LIEFERANTNAME", "_LIEFERANTNAME")
            tableMapping.ColumnMappings.Add("_EV", "_EV")
            tableMapping.ColumnMappings.Add("_EXBESTNR", "_EXBESTNR")
            tableMapping.ColumnMappings.Add("Preismengeneinheit", "Preismengeneinheit")
            tableMapping.ColumnMappings.Add("Preismengenfaktor", "Preismengenfaktor")
            tableMapping.ColumnMappings.Add("LosgroesseVerkauf", "LosgroesseVerkauf")
            tableMapping.ColumnMappings.Add("Bestandsauswahl", "Bestandsauswahl")
            tableMapping.ColumnMappings.Add("_VERFUEGBAR", "_VERFUEGBAR")
            tableMapping.ColumnMappings.Add("_ARTIKELNUMMERALT", "_ARTIKELNUMMERALT")
            tableMapping.ColumnMappings.Add("_LAGERNEU", "_LAGERNEU")
            tableMapping.ColumnMappings.Add("_LAGERPLATZNEU", "_LAGERPLATZNEU")
            tableMapping.ColumnMappings.Add("Leistungsartikel", "Leistungsartikel")
            tableMapping.ColumnMappings.Add("Aufschlagstyp", "Aufschlagstyp")
            tableMapping.ColumnMappings.Add("ArbeitsplanID", "ArbeitsplanID")
            tableMapping.ColumnMappings.Add("AuftragsTypID", "AuftragsTypID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ART] WHERE (([ART_ID] = @Original_ART_ID) AND ([TS] = @Original_TS))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ART_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ART_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TS", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ART] ([Artikelnummer], [EANNummer], [Bezeichnung], [Zusatz], [Matchc"& _ 
                "ode], [Artikelgruppe], [Erfolgskontengruppe], [Aufwandskontengruppe], [Mengensta"& _ 
                "ffel], [SSEinkauf], [KontoEinkauf], [SSVerkauf], [KontoVerkauf], [Mengeneinheit]"& _ 
                ", [Preisverweis], [Preiseinheit], [Gewicht], [Lagerartikel], [Mengenformel], [St"& _ 
                "ueckliste], [SerieCharge], [Variantenartikel], [MinusWarnung], [Provisionsfaehig"& _ 
                "], [Rabattfaehig], [Skontofaehig], [Provisionsgruppe], [Hersteller], [HstArtikel"& _ 
                "nummer], [Lieferant], [Dispositionsart], [AutoBestellung], [Lagerstrategie], [Au"& _ 
                "slaufdatum], [Inaktiv], [AngelegtAm], [AngelegtVon], [GeaendertAm], [GeaendertVo"& _ 
                "n], [FreierText1], [FreierText2], [FreieZahl1], [FreieZahl2], [FreieZahl3], [Fre"& _ 
                "ieZahl4], [FreiesDatum1], [FreiesDatum2], [FreiesKennzeichen1], [FreiesKennzeich"& _ 
                "en2], [FreiesKennzeichen3], [FreiesKennzeichen4], [SSEG], [SSImport], [SSExport]"& _ 
                ", [ShopAktiv], [Region], [Ursprungsland], [Geschaeftsart], [Warencode], [StatVer"& _ 
                "sand], [StatEingang], [StatWertEuro], [Kostenstelle], [Kostentraeger], [DNExport"& _ 
                "], [Ausschussartikelnummer], [Produktionslager], [AusschussBewertung], [Verfalls"& _ 
                "frist], [_HERSTELLERNAME], [_LIEFERANTNAME], [_EV], [_EXBESTNR], [Preismengenein"& _ 
                "heit], [Preismengenfaktor], [LosgroesseVerkauf], [Bestandsauswahl], [_VERFUEGBAR"& _ 
                "], [_ARTIKELNUMMERALT], [_LAGERNEU], [_LAGERPLATZNEU], [Leistungsartikel], [Aufs"& _ 
                "chlagstyp], [ArbeitsplanID], [AuftragsTypID]) VALUES (@Artikelnummer, @EANNummer"& _ 
                ", @Bezeichnung, @Zusatz, @Matchcode, @Artikelgruppe, @Erfolgskontengruppe, @Aufw"& _ 
                "andskontengruppe, @Mengenstaffel, @SSEinkauf, @KontoEinkauf, @SSVerkauf, @KontoV"& _ 
                "erkauf, @Mengeneinheit, @Preisverweis, @Preiseinheit, @Gewicht, @Lagerartikel, @"& _ 
                "Mengenformel, @Stueckliste, @SerieCharge, @Variantenartikel, @MinusWarnung, @Pro"& _ 
                "visionsfaehig, @Rabattfaehig, @Skontofaehig, @Provisionsgruppe, @Hersteller, @Hs"& _ 
                "tArtikelnummer, @Lieferant, @Dispositionsart, @AutoBestellung, @Lagerstrategie, "& _ 
                "@Auslaufdatum, @Inaktiv, @AngelegtAm, @AngelegtVon, @GeaendertAm, @GeaendertVon,"& _ 
                " @FreierText1, @FreierText2, @FreieZahl1, @FreieZahl2, @FreieZahl3, @FreieZahl4,"& _ 
                " @FreiesDatum1, @FreiesDatum2, @FreiesKennzeichen1, @FreiesKennzeichen2, @Freies"& _ 
                "Kennzeichen3, @FreiesKennzeichen4, @SSEG, @SSImport, @SSExport, @ShopAktiv, @Reg"& _ 
                "ion, @Ursprungsland, @Geschaeftsart, @Warencode, @StatVersand, @StatEingang, @St"& _ 
                "atWertEuro, @Kostenstelle, @Kostentraeger, @DNExport, @Ausschussartikelnummer, @"& _ 
                "Produktionslager, @AusschussBewertung, @Verfallsfrist, @_HERSTELLERNAME, @_LIEFE"& _ 
                "RANTNAME, @_EV, @_EXBESTNR, @Preismengeneinheit, @Preismengenfaktor, @Losgroesse"& _ 
                "Verkauf, @Bestandsauswahl, @_VERFUEGBAR, @_ARTIKELNUMMERALT, @_LAGERNEU, @_LAGER"& _ 
                "PLATZNEU, @Leistungsartikel, @Aufschlagstyp, @ArbeitsplanID, @AuftragsTypID);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S"& _ 
                "ELECT ART_ID, Artikelnummer, EANNummer, Bezeichnung, Zusatz, Matchcode, Artikelg"& _ 
                "ruppe, Erfolgskontengruppe, Aufwandskontengruppe, Mengenstaffel, SSEinkauf, Kont"& _ 
                "oEinkauf, SSVerkauf, KontoVerkauf, Mengeneinheit, Preisverweis, Preiseinheit, Ge"& _ 
                "wicht, Lagerartikel, Mengenformel, Stueckliste, SerieCharge, Variantenartikel, M"& _ 
                "inusWarnung, Provisionsfaehig, Rabattfaehig, Skontofaehig, Provisionsgruppe, Her"& _ 
                "steller, HstArtikelnummer, Lieferant, Dispositionsart, AutoBestellung, Lagerstra"& _ 
                "tegie, Auslaufdatum, Inaktiv, AngelegtAm, AngelegtVon, GeaendertAm, GeaendertVon"& _ 
                ", FreierText1, FreierText2, FreieZahl1, FreieZahl2, FreieZahl3, FreieZahl4, Frei"& _ 
                "esDatum1, FreiesDatum2, FreiesKennzeichen1, FreiesKennzeichen2, FreiesKennzeiche"& _ 
                "n3, FreiesKennzeichen4, SSEG, SSImport, SSExport, ShopAktiv, Region, Ursprungsla"& _ 
                "nd, Geschaeftsart, Warencode, StatVersand, StatEingang, StatWertEuro, Kostenstel"& _ 
                "le, Kostentraeger, DNExport, Ausschussartikelnummer, Produktionslager, Ausschuss"& _ 
                "Bewertung, Verfallsfrist, TS, _HERSTELLERNAME, _LIEFERANTNAME, _EV, _EXBESTNR, P"& _ 
                "reismengeneinheit, Preismengenfaktor, LosgroesseVerkauf, Bestandsauswahl, _VERFU"& _ 
                "EGBAR, _ARTIKELNUMMERALT, _LAGERNEU, _LAGERPLATZNEU, Leistungsartikel, Aufschlag"& _ 
                "styp, ArbeitsplanID, AuftragsTypID FROM ART WHERE (ART_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Artikelnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Artikelnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EANNummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EANNummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bezeichnung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bezeichnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zusatz", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zusatz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Matchcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Matchcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Artikelgruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Artikelgruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Erfolgskontengruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Erfolgskontengruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Aufwandskontengruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Aufwandskontengruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mengenstaffel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mengenstaffel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSEinkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSEinkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KontoEinkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KontoEinkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSVerkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSVerkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KontoVerkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KontoVerkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mengeneinheit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mengeneinheit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preisverweis", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preisverweis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preiseinheit", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preiseinheit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gewicht", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gewicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lagerartikel", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lagerartikel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mengenformel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mengenformel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stueckliste", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stueckliste", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerieCharge", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SerieCharge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Variantenartikel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Variantenartikel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinusWarnung", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinusWarnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provisionsfaehig", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provisionsfaehig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rabattfaehig", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rabattfaehig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontofaehig", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontofaehig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provisionsgruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provisionsgruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hersteller", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Hersteller", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HstArtikelnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HstArtikelnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lieferant", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lieferant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dispositionsart", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dispositionsart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AutoBestellung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AutoBestellung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lagerstrategie", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lagerstrategie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Auslaufdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Auslaufdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inaktiv", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inaktiv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AngelegtAm", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AngelegtAm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AngelegtVon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AngelegtVon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GeaendertAm", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GeaendertAm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GeaendertVon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GeaendertVon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreierText1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreierText1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreierText2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreierText2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl3", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl4", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesDatum1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesDatum1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesDatum2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesDatum2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSEG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSImport", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSImport", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSExport", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSExport", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShopAktiv", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShopAktiv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ursprungsland", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ursprungsland", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Geschaeftsart", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warencode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warencode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatVersand", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatVersand", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatEingang", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatEingang", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatWertEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatWertEuro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostentraeger", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostentraeger", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DNExport", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DNExport", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ausschussartikelnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ausschussartikelnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Produktionslager", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Produktionslager", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AusschussBewertung", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AusschussBewertung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Verfallsfrist", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Verfallsfrist", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_HERSTELLERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_HERSTELLERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_LIEFERANTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_LIEFERANTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_EV", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_EV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_EXBESTNR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_EXBESTNR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preismengeneinheit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preismengeneinheit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preismengenfaktor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preismengenfaktor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LosgroesseVerkauf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LosgroesseVerkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bestandsauswahl", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bestandsauswahl", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_VERFUEGBAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_VERFUEGBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_ARTIKELNUMMERALT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_ARTIKELNUMMERALT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_LAGERNEU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_LAGERNEU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_LAGERPLATZNEU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_LAGERPLATZNEU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Leistungsartikel", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Leistungsartikel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Aufschlagstyp", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Aufschlagstyp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArbeitsplanID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArbeitsplanID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuftragsTypID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuftragsTypID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ART] SET [Artikelnummer] = @Artikelnummer, [EANNummer] = @EANNummer, [Bez"& _ 
                "eichnung] = @Bezeichnung, [Zusatz] = @Zusatz, [Matchcode] = @Matchcode, [Artikel"& _ 
                "gruppe] = @Artikelgruppe, [Erfolgskontengruppe] = @Erfolgskontengruppe, [Aufwand"& _ 
                "skontengruppe] = @Aufwandskontengruppe, [Mengenstaffel] = @Mengenstaffel, [SSEin"& _ 
                "kauf] = @SSEinkauf, [KontoEinkauf] = @KontoEinkauf, [SSVerkauf] = @SSVerkauf, [K"& _ 
                "ontoVerkauf] = @KontoVerkauf, [Mengeneinheit] = @Mengeneinheit, [Preisverweis] ="& _ 
                " @Preisverweis, [Preiseinheit] = @Preiseinheit, [Gewicht] = @Gewicht, [Lagerarti"& _ 
                "kel] = @Lagerartikel, [Mengenformel] = @Mengenformel, [Stueckliste] = @Stuecklis"& _ 
                "te, [SerieCharge] = @SerieCharge, [Variantenartikel] = @Variantenartikel, [Minus"& _ 
                "Warnung] = @MinusWarnung, [Provisionsfaehig] = @Provisionsfaehig, [Rabattfaehig]"& _ 
                " = @Rabattfaehig, [Skontofaehig] = @Skontofaehig, [Provisionsgruppe] = @Provisio"& _ 
                "nsgruppe, [Hersteller] = @Hersteller, [HstArtikelnummer] = @HstArtikelnummer, [L"& _ 
                "ieferant] = @Lieferant, [Dispositionsart] = @Dispositionsart, [AutoBestellung] ="& _ 
                " @AutoBestellung, [Lagerstrategie] = @Lagerstrategie, [Auslaufdatum] = @Auslaufd"& _ 
                "atum, [Inaktiv] = @Inaktiv, [AngelegtAm] = @AngelegtAm, [AngelegtVon] = @Angeleg"& _ 
                "tVon, [GeaendertAm] = @GeaendertAm, [GeaendertVon] = @GeaendertVon, [FreierText1"& _ 
                "] = @FreierText1, [FreierText2] = @FreierText2, [FreieZahl1] = @FreieZahl1, [Fre"& _ 
                "ieZahl2] = @FreieZahl2, [FreieZahl3] = @FreieZahl3, [FreieZahl4] = @FreieZahl4, "& _ 
                "[FreiesDatum1] = @FreiesDatum1, [FreiesDatum2] = @FreiesDatum2, [FreiesKennzeich"& _ 
                "en1] = @FreiesKennzeichen1, [FreiesKennzeichen2] = @FreiesKennzeichen2, [FreiesK"& _ 
                "ennzeichen3] = @FreiesKennzeichen3, [FreiesKennzeichen4] = @FreiesKennzeichen4, "& _ 
                "[SSEG] = @SSEG, [SSImport] = @SSImport, [SSExport] = @SSExport, [ShopAktiv] = @S"& _ 
                "hopAktiv, [Region] = @Region, [Ursprungsland] = @Ursprungsland, [Geschaeftsart] "& _ 
                "= @Geschaeftsart, [Warencode] = @Warencode, [StatVersand] = @StatVersand, [StatE"& _ 
                "ingang] = @StatEingang, [StatWertEuro] = @StatWertEuro, [Kostenstelle] = @Kosten"& _ 
                "stelle, [Kostentraeger] = @Kostentraeger, [DNExport] = @DNExport, [Ausschussarti"& _ 
                "kelnummer] = @Ausschussartikelnummer, [Produktionslager] = @Produktionslager, [A"& _ 
                "usschussBewertung] = @AusschussBewertung, [Verfallsfrist] = @Verfallsfrist, [_HE"& _ 
                "RSTELLERNAME] = @_HERSTELLERNAME, [_LIEFERANTNAME] = @_LIEFERANTNAME, [_EV] = @_"& _ 
                "EV, [_EXBESTNR] = @_EXBESTNR, [Preismengeneinheit] = @Preismengeneinheit, [Preis"& _ 
                "mengenfaktor] = @Preismengenfaktor, [LosgroesseVerkauf] = @LosgroesseVerkauf, [B"& _ 
                "estandsauswahl] = @Bestandsauswahl, [_VERFUEGBAR] = @_VERFUEGBAR, [_ARTIKELNUMME"& _ 
                "RALT] = @_ARTIKELNUMMERALT, [_LAGERNEU] = @_LAGERNEU, [_LAGERPLATZNEU] = @_LAGER"& _ 
                "PLATZNEU, [Leistungsartikel] = @Leistungsartikel, [Aufschlagstyp] = @Aufschlagst"& _ 
                "yp, [ArbeitsplanID] = @ArbeitsplanID, [AuftragsTypID] = @AuftragsTypID WHERE ((["& _ 
                "ART_ID] = @Original_ART_ID) AND ([TS] = @Original_TS));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ART_ID, Artikeln"& _ 
                "ummer, EANNummer, Bezeichnung, Zusatz, Matchcode, Artikelgruppe, Erfolgskontengr"& _ 
                "uppe, Aufwandskontengruppe, Mengenstaffel, SSEinkauf, KontoEinkauf, SSVerkauf, K"& _ 
                "ontoVerkauf, Mengeneinheit, Preisverweis, Preiseinheit, Gewicht, Lagerartikel, M"& _ 
                "engenformel, Stueckliste, SerieCharge, Variantenartikel, MinusWarnung, Provision"& _ 
                "sfaehig, Rabattfaehig, Skontofaehig, Provisionsgruppe, Hersteller, HstArtikelnum"& _ 
                "mer, Lieferant, Dispositionsart, AutoBestellung, Lagerstrategie, Auslaufdatum, I"& _ 
                "naktiv, AngelegtAm, AngelegtVon, GeaendertAm, GeaendertVon, FreierText1, FreierT"& _ 
                "ext2, FreieZahl1, FreieZahl2, FreieZahl3, FreieZahl4, FreiesDatum1, FreiesDatum2"& _ 
                ", FreiesKennzeichen1, FreiesKennzeichen2, FreiesKennzeichen3, FreiesKennzeichen4"& _ 
                ", SSEG, SSImport, SSExport, ShopAktiv, Region, Ursprungsland, Geschaeftsart, War"& _ 
                "encode, StatVersand, StatEingang, StatWertEuro, Kostenstelle, Kostentraeger, DNE"& _ 
                "xport, Ausschussartikelnummer, Produktionslager, AusschussBewertung, Verfallsfri"& _ 
                "st, TS, _HERSTELLERNAME, _LIEFERANTNAME, _EV, _EXBESTNR, Preismengeneinheit, Pre"& _ 
                "ismengenfaktor, LosgroesseVerkauf, Bestandsauswahl, _VERFUEGBAR, _ARTIKELNUMMERA"& _ 
                "LT, _LAGERNEU, _LAGERPLATZNEU, Leistungsartikel, Aufschlagstyp, ArbeitsplanID, A"& _ 
                "uftragsTypID FROM ART WHERE (ART_ID = @ART_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Artikelnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Artikelnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EANNummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EANNummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bezeichnung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bezeichnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zusatz", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zusatz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Matchcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Matchcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Artikelgruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Artikelgruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Erfolgskontengruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Erfolgskontengruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Aufwandskontengruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Aufwandskontengruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mengenstaffel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mengenstaffel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSEinkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSEinkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KontoEinkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KontoEinkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSVerkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSVerkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KontoVerkauf", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KontoVerkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mengeneinheit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mengeneinheit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preisverweis", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preisverweis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preiseinheit", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preiseinheit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gewicht", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gewicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lagerartikel", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lagerartikel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mengenformel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mengenformel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stueckliste", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stueckliste", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SerieCharge", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SerieCharge", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Variantenartikel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Variantenartikel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MinusWarnung", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MinusWarnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provisionsfaehig", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provisionsfaehig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rabattfaehig", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rabattfaehig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontofaehig", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontofaehig", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provisionsgruppe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provisionsgruppe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hersteller", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Hersteller", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HstArtikelnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HstArtikelnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lieferant", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lieferant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dispositionsart", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dispositionsart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AutoBestellung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AutoBestellung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lagerstrategie", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lagerstrategie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Auslaufdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Auslaufdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inaktiv", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inaktiv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AngelegtAm", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AngelegtAm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AngelegtVon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AngelegtVon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GeaendertAm", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GeaendertAm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GeaendertVon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GeaendertVon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreierText1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreierText1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreierText2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreierText2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl3", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreieZahl4", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreieZahl4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesDatum1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesDatum1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesDatum2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesDatum2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen3", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FreiesKennzeichen4", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FreiesKennzeichen4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSEG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSImport", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSImport", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SSExport", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SSExport", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShopAktiv", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShopAktiv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ursprungsland", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ursprungsland", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Geschaeftsart", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Warencode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Warencode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatVersand", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatVersand", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatEingang", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatEingang", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatWertEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatWertEuro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostentraeger", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostentraeger", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DNExport", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DNExport", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ausschussartikelnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ausschussartikelnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Produktionslager", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Produktionslager", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AusschussBewertung", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AusschussBewertung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Verfallsfrist", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Verfallsfrist", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_HERSTELLERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_HERSTELLERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_LIEFERANTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_LIEFERANTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_EV", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_EV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_EXBESTNR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_EXBESTNR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preismengeneinheit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preismengeneinheit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Preismengenfaktor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Preismengenfaktor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LosgroesseVerkauf", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LosgroesseVerkauf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bestandsauswahl", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bestandsauswahl", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_VERFUEGBAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_VERFUEGBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_ARTIKELNUMMERALT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_ARTIKELNUMMERALT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_LAGERNEU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_LAGERNEU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@_LAGERPLATZNEU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "_LAGERPLATZNEU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Leistungsartikel", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Leistungsartikel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Aufschlagstyp", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Aufschlagstyp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArbeitsplanID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArbeitsplanID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuftragsTypID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuftragsTypID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ART_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ART_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TS", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ART_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ART_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MAI_TOOLBOX.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ART.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ART"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Artikel.ARTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Artikel.ARTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Artikel.ARTDataTable = New Artikel.ARTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Artikel.ARTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Artikel) As Integer
            Return Me.Adapter.Update(dataSet, "ART")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ART_ID As Integer, ByVal Original_TS() As Byte) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ART_ID,Integer)
            If (Original_TS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TS")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TS,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Artikelnummer As String,  _
                    ByVal EANNummer As String,  _
                    ByVal Bezeichnung As String,  _
                    ByVal Zusatz As String,  _
                    ByVal Matchcode As String,  _
                    ByVal Artikelgruppe As String,  _
                    ByVal Erfolgskontengruppe As String,  _
                    ByVal Aufwandskontengruppe As String,  _
                    ByVal Mengenstaffel As String,  _
                    ByVal SSEinkauf As String,  _
                    ByVal KontoEinkauf As String,  _
                    ByVal SSVerkauf As String,  _
                    ByVal KontoVerkauf As String,  _
                    ByVal Mengeneinheit As String,  _
                    ByVal Preisverweis As String,  _
                    ByVal Preiseinheit As Global.System.Nullable(Of Double),  _
                    ByVal Gewicht As Global.System.Nullable(Of Double),  _
                    ByVal Lagerartikel As Global.System.Nullable(Of Boolean),  _
                    ByVal Mengenformel As String,  _
                    ByVal Stueckliste As String,  _
                    ByVal SerieCharge As String,  _
                    ByVal Variantenartikel As String,  _
                    ByVal MinusWarnung As Global.System.Nullable(Of Boolean),  _
                    ByVal Provisionsfaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Rabattfaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Skontofaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Provisionsgruppe As String,  _
                    ByVal Hersteller As String,  _
                    ByVal HstArtikelnummer As String,  _
                    ByVal Lieferant As String,  _
                    ByVal Dispositionsart As String,  _
                    ByVal AutoBestellung As String,  _
                    ByVal Lagerstrategie As String,  _
                    ByVal Auslaufdatum As Global.System.Nullable(Of Date),  _
                    ByVal Inaktiv As Boolean,  _
                    ByVal AngelegtAm As Global.System.Nullable(Of Date),  _
                    ByVal AngelegtVon As String,  _
                    ByVal GeaendertAm As Global.System.Nullable(Of Date),  _
                    ByVal GeaendertVon As String,  _
                    ByVal FreierText1 As String,  _
                    ByVal FreierText2 As String,  _
                    ByVal FreieZahl1 As Global.System.Nullable(Of Short),  _
                    ByVal FreieZahl2 As Global.System.Nullable(Of Short),  _
                    ByVal FreieZahl3 As Global.System.Nullable(Of Double),  _
                    ByVal FreieZahl4 As Global.System.Nullable(Of Double),  _
                    ByVal FreiesDatum1 As Global.System.Nullable(Of Date),  _
                    ByVal FreiesDatum2 As Global.System.Nullable(Of Date),  _
                    ByVal FreiesKennzeichen1 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen2 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen3 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen4 As Global.System.Nullable(Of Boolean),  _
                    ByVal SSEG As String,  _
                    ByVal SSImport As String,  _
                    ByVal SSExport As String,  _
                    ByVal ShopAktiv As Global.System.Nullable(Of Boolean),  _
                    ByVal _Region As String,  _
                    ByVal Ursprungsland As String,  _
                    ByVal Geschaeftsart As String,  _
                    ByVal Warencode As String,  _
                    ByVal StatVersand As String,  _
                    ByVal StatEingang As String,  _
                    ByVal StatWertEuro As Global.System.Nullable(Of Double),  _
                    ByVal Kostenstelle As String,  _
                    ByVal Kostentraeger As String,  _
                    ByVal DNExport As String,  _
                    ByVal Ausschussartikelnummer As String,  _
                    ByVal Produktionslager As String,  _
                    ByVal AusschussBewertung As Global.System.Nullable(Of Double),  _
                    ByVal Verfallsfrist As Global.System.Nullable(Of Integer),  _
                    ByVal _HERSTELLERNAME As String,  _
                    ByVal _LIEFERANTNAME As String,  _
                    ByVal _EV As String,  _
                    ByVal _EXBESTNR As String,  _
                    ByVal Preismengeneinheit As String,  _
                    ByVal Preismengenfaktor As Global.System.Nullable(Of Double),  _
                    ByVal LosgroesseVerkauf As Integer,  _
                    ByVal Bestandsauswahl As Boolean,  _
                    ByVal _VERFUEGBAR As String,  _
                    ByVal _ARTIKELNUMMERALT As String,  _
                    ByVal _LAGERNEU As String,  _
                    ByVal _LAGERPLATZNEU As String,  _
                    ByVal Leistungsartikel As Global.System.Nullable(Of Boolean),  _
                    ByVal Aufschlagstyp As String,  _
                    ByVal ArbeitsplanID As String,  _
                    ByVal AuftragsTypID As String) As Integer
            If (Artikelnummer Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Artikelnummer")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Artikelnummer,String)
            End If
            If (EANNummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(EANNummer,String)
            End If
            If (Bezeichnung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bezeichnung,String)
            End If
            If (Zusatz Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Zusatz,String)
            End If
            If (Matchcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Matchcode,String)
            End If
            If (Artikelgruppe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Artikelgruppe,String)
            End If
            If (Erfolgskontengruppe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Erfolgskontengruppe,String)
            End If
            If (Aufwandskontengruppe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Aufwandskontengruppe,String)
            End If
            If (Mengenstaffel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Mengenstaffel,String)
            End If
            If (SSEinkauf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SSEinkauf,String)
            End If
            If (KontoEinkauf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(KontoEinkauf,String)
            End If
            If (SSVerkauf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SSVerkauf,String)
            End If
            If (KontoVerkauf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(KontoVerkauf,String)
            End If
            If (Mengeneinheit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Mengeneinheit,String)
            End If
            If (Preisverweis Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Preisverweis,String)
            End If
            If (Preiseinheit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Preiseinheit.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Gewicht.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Gewicht.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Lagerartikel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Lagerartikel.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Mengenformel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Mengenformel,String)
            End If
            If (Stueckliste Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Stueckliste,String)
            End If
            If (SerieCharge Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SerieCharge,String)
            End If
            If (Variantenartikel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Variantenartikel,String)
            End If
            If (MinusWarnung.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(MinusWarnung.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Provisionsfaehig.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Provisionsfaehig.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Rabattfaehig.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Rabattfaehig.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Skontofaehig.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Skontofaehig.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Provisionsgruppe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Provisionsgruppe,String)
            End If
            If (Hersteller Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Hersteller,String)
            End If
            If (HstArtikelnummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(HstArtikelnummer,String)
            End If
            If (Lieferant Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Lieferant,String)
            End If
            If (Dispositionsart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Dispositionsart,String)
            End If
            If (AutoBestellung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(AutoBestellung,String)
            End If
            If (Lagerstrategie Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Lagerstrategie,String)
            End If
            If (Auslaufdatum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Auslaufdatum.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(Inaktiv,Boolean)
            If (AngelegtAm.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(AngelegtAm.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (AngelegtVon Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(AngelegtVon,String)
            End If
            If (GeaendertAm.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(GeaendertAm.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (GeaendertVon Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(GeaendertVon,String)
            End If
            If (FreierText1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(FreierText1,String)
            End If
            If (FreierText2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(FreierText2,String)
            End If
            If (FreieZahl1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(FreieZahl1.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (FreieZahl2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(FreieZahl2.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (FreieZahl3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(FreieZahl3.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (FreieZahl4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(FreieZahl4.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (FreiesDatum1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(FreiesDatum1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (FreiesDatum2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(FreiesDatum2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(FreiesKennzeichen1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(FreiesKennzeichen2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(FreiesKennzeichen3.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(FreiesKennzeichen4.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (SSEG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(SSEG,String)
            End If
            If (SSImport Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(SSImport,String)
            End If
            If (SSExport Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(SSExport,String)
            End If
            If (ShopAktiv.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(ShopAktiv.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (_Region Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(_Region,String)
            End If
            If (Ursprungsland Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Ursprungsland,String)
            End If
            If (Geschaeftsart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(Geschaeftsart,String)
            End If
            If (Warencode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Warencode,String)
            End If
            If (StatVersand Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(StatVersand,String)
            End If
            If (StatEingang Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(StatEingang,String)
            End If
            If (StatWertEuro.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(StatWertEuro.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Kostenstelle Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(Kostenstelle,String)
            End If
            If (Kostentraeger Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(Kostentraeger,String)
            End If
            If (DNExport Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(DNExport,String)
            End If
            If (Ausschussartikelnummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Ausschussartikelnummer,String)
            End If
            If (Produktionslager Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(Produktionslager,String)
            End If
            If (AusschussBewertung.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(AusschussBewertung.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Verfallsfrist.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(Verfallsfrist.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (_HERSTELLERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(_HERSTELLERNAME,String)
            End If
            If (_LIEFERANTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(_LIEFERANTNAME,String)
            End If
            If (_EV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(_EV,String)
            End If
            If (_EXBESTNR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(_EXBESTNR,String)
            End If
            If (Preismengeneinheit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(Preismengeneinheit,String)
            End If
            If (Preismengenfaktor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(Preismengenfaktor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(75).Value = CType(LosgroesseVerkauf,Integer)
            Me.Adapter.InsertCommand.Parameters(76).Value = CType(Bestandsauswahl,Boolean)
            If (_VERFUEGBAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(_VERFUEGBAR,String)
            End If
            If (_ARTIKELNUMMERALT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(_ARTIKELNUMMERALT,String)
            End If
            If (_LAGERNEU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(_LAGERNEU,String)
            End If
            If (_LAGERPLATZNEU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(_LAGERPLATZNEU,String)
            End If
            If (Leistungsartikel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(Leistungsartikel.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Aufschlagstyp Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(Aufschlagstyp,String)
            End If
            If (ArbeitsplanID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(ArbeitsplanID,String)
            End If
            If (AuftragsTypID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(AuftragsTypID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Artikelnummer As String,  _
                    ByVal EANNummer As String,  _
                    ByVal Bezeichnung As String,  _
                    ByVal Zusatz As String,  _
                    ByVal Matchcode As String,  _
                    ByVal Artikelgruppe As String,  _
                    ByVal Erfolgskontengruppe As String,  _
                    ByVal Aufwandskontengruppe As String,  _
                    ByVal Mengenstaffel As String,  _
                    ByVal SSEinkauf As String,  _
                    ByVal KontoEinkauf As String,  _
                    ByVal SSVerkauf As String,  _
                    ByVal KontoVerkauf As String,  _
                    ByVal Mengeneinheit As String,  _
                    ByVal Preisverweis As String,  _
                    ByVal Preiseinheit As Global.System.Nullable(Of Double),  _
                    ByVal Gewicht As Global.System.Nullable(Of Double),  _
                    ByVal Lagerartikel As Global.System.Nullable(Of Boolean),  _
                    ByVal Mengenformel As String,  _
                    ByVal Stueckliste As String,  _
                    ByVal SerieCharge As String,  _
                    ByVal Variantenartikel As String,  _
                    ByVal MinusWarnung As Global.System.Nullable(Of Boolean),  _
                    ByVal Provisionsfaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Rabattfaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Skontofaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Provisionsgruppe As String,  _
                    ByVal Hersteller As String,  _
                    ByVal HstArtikelnummer As String,  _
                    ByVal Lieferant As String,  _
                    ByVal Dispositionsart As String,  _
                    ByVal AutoBestellung As String,  _
                    ByVal Lagerstrategie As String,  _
                    ByVal Auslaufdatum As Global.System.Nullable(Of Date),  _
                    ByVal Inaktiv As Boolean,  _
                    ByVal AngelegtAm As Global.System.Nullable(Of Date),  _
                    ByVal AngelegtVon As String,  _
                    ByVal GeaendertAm As Global.System.Nullable(Of Date),  _
                    ByVal GeaendertVon As String,  _
                    ByVal FreierText1 As String,  _
                    ByVal FreierText2 As String,  _
                    ByVal FreieZahl1 As Global.System.Nullable(Of Short),  _
                    ByVal FreieZahl2 As Global.System.Nullable(Of Short),  _
                    ByVal FreieZahl3 As Global.System.Nullable(Of Double),  _
                    ByVal FreieZahl4 As Global.System.Nullable(Of Double),  _
                    ByVal FreiesDatum1 As Global.System.Nullable(Of Date),  _
                    ByVal FreiesDatum2 As Global.System.Nullable(Of Date),  _
                    ByVal FreiesKennzeichen1 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen2 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen3 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen4 As Global.System.Nullable(Of Boolean),  _
                    ByVal SSEG As String,  _
                    ByVal SSImport As String,  _
                    ByVal SSExport As String,  _
                    ByVal ShopAktiv As Global.System.Nullable(Of Boolean),  _
                    ByVal _Region As String,  _
                    ByVal Ursprungsland As String,  _
                    ByVal Geschaeftsart As String,  _
                    ByVal Warencode As String,  _
                    ByVal StatVersand As String,  _
                    ByVal StatEingang As String,  _
                    ByVal StatWertEuro As Global.System.Nullable(Of Double),  _
                    ByVal Kostenstelle As String,  _
                    ByVal Kostentraeger As String,  _
                    ByVal DNExport As String,  _
                    ByVal Ausschussartikelnummer As String,  _
                    ByVal Produktionslager As String,  _
                    ByVal AusschussBewertung As Global.System.Nullable(Of Double),  _
                    ByVal Verfallsfrist As Global.System.Nullable(Of Integer),  _
                    ByVal _HERSTELLERNAME As String,  _
                    ByVal _LIEFERANTNAME As String,  _
                    ByVal _EV As String,  _
                    ByVal _EXBESTNR As String,  _
                    ByVal Preismengeneinheit As String,  _
                    ByVal Preismengenfaktor As Global.System.Nullable(Of Double),  _
                    ByVal LosgroesseVerkauf As Integer,  _
                    ByVal Bestandsauswahl As Boolean,  _
                    ByVal _VERFUEGBAR As String,  _
                    ByVal _ARTIKELNUMMERALT As String,  _
                    ByVal _LAGERNEU As String,  _
                    ByVal _LAGERPLATZNEU As String,  _
                    ByVal Leistungsartikel As Global.System.Nullable(Of Boolean),  _
                    ByVal Aufschlagstyp As String,  _
                    ByVal ArbeitsplanID As String,  _
                    ByVal AuftragsTypID As String,  _
                    ByVal Original_ART_ID As Integer,  _
                    ByVal Original_TS() As Byte,  _
                    ByVal ART_ID As Integer) As Integer
            If (Artikelnummer Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Artikelnummer")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Artikelnummer,String)
            End If
            If (EANNummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(EANNummer,String)
            End If
            If (Bezeichnung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Bezeichnung,String)
            End If
            If (Zusatz Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Zusatz,String)
            End If
            If (Matchcode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Matchcode,String)
            End If
            If (Artikelgruppe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Artikelgruppe,String)
            End If
            If (Erfolgskontengruppe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Erfolgskontengruppe,String)
            End If
            If (Aufwandskontengruppe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Aufwandskontengruppe,String)
            End If
            If (Mengenstaffel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Mengenstaffel,String)
            End If
            If (SSEinkauf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SSEinkauf,String)
            End If
            If (KontoEinkauf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(KontoEinkauf,String)
            End If
            If (SSVerkauf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SSVerkauf,String)
            End If
            If (KontoVerkauf Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(KontoVerkauf,String)
            End If
            If (Mengeneinheit Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Mengeneinheit,String)
            End If
            If (Preisverweis Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Preisverweis,String)
            End If
            If (Preiseinheit.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Preiseinheit.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Gewicht.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Gewicht.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Lagerartikel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Lagerartikel.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Mengenformel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Mengenformel,String)
            End If
            If (Stueckliste Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Stueckliste,String)
            End If
            If (SerieCharge Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(SerieCharge,String)
            End If
            If (Variantenartikel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Variantenartikel,String)
            End If
            If (MinusWarnung.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(MinusWarnung.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Provisionsfaehig.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Provisionsfaehig.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Rabattfaehig.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Rabattfaehig.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Skontofaehig.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Skontofaehig.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Provisionsgruppe Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Provisionsgruppe,String)
            End If
            If (Hersteller Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Hersteller,String)
            End If
            If (HstArtikelnummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(HstArtikelnummer,String)
            End If
            If (Lieferant Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Lieferant,String)
            End If
            If (Dispositionsart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Dispositionsart,String)
            End If
            If (AutoBestellung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(AutoBestellung,String)
            End If
            If (Lagerstrategie Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Lagerstrategie,String)
            End If
            If (Auslaufdatum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Auslaufdatum.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Inaktiv,Boolean)
            If (AngelegtAm.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(AngelegtAm.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (AngelegtVon Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(AngelegtVon,String)
            End If
            If (GeaendertAm.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(GeaendertAm.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (GeaendertVon Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(GeaendertVon,String)
            End If
            If (FreierText1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(FreierText1,String)
            End If
            If (FreierText2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(FreierText2,String)
            End If
            If (FreieZahl1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(FreieZahl1.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (FreieZahl2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(FreieZahl2.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (FreieZahl3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(FreieZahl3.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (FreieZahl4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(FreieZahl4.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (FreiesDatum1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(FreiesDatum1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (FreiesDatum2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(FreiesDatum2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(FreiesKennzeichen1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(FreiesKennzeichen2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(FreiesKennzeichen3.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (FreiesKennzeichen4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(FreiesKennzeichen4.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (SSEG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(SSEG,String)
            End If
            If (SSImport Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(SSImport,String)
            End If
            If (SSExport Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(SSExport,String)
            End If
            If (ShopAktiv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(ShopAktiv.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(_Region,String)
            End If
            If (Ursprungsland Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Ursprungsland,String)
            End If
            If (Geschaeftsart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Geschaeftsart,String)
            End If
            If (Warencode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Warencode,String)
            End If
            If (StatVersand Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(StatVersand,String)
            End If
            If (StatEingang Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(StatEingang,String)
            End If
            If (StatWertEuro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(StatWertEuro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Kostenstelle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Kostenstelle,String)
            End If
            If (Kostentraeger Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Kostentraeger,String)
            End If
            If (DNExport Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(DNExport,String)
            End If
            If (Ausschussartikelnummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Ausschussartikelnummer,String)
            End If
            If (Produktionslager Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Produktionslager,String)
            End If
            If (AusschussBewertung.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(AusschussBewertung.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Verfallsfrist.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Verfallsfrist.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (_HERSTELLERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(_HERSTELLERNAME,String)
            End If
            If (_LIEFERANTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(_LIEFERANTNAME,String)
            End If
            If (_EV Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(_EV,String)
            End If
            If (_EXBESTNR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(_EXBESTNR,String)
            End If
            If (Preismengeneinheit Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Preismengeneinheit,String)
            End If
            If (Preismengenfaktor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Preismengenfaktor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(LosgroesseVerkauf,Integer)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Bestandsauswahl,Boolean)
            If (_VERFUEGBAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(_VERFUEGBAR,String)
            End If
            If (_ARTIKELNUMMERALT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(_ARTIKELNUMMERALT,String)
            End If
            If (_LAGERNEU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(_LAGERNEU,String)
            End If
            If (_LAGERPLATZNEU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(_LAGERPLATZNEU,String)
            End If
            If (Leistungsartikel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Leistungsartikel.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Aufschlagstyp Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Aufschlagstyp,String)
            End If
            If (ArbeitsplanID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(ArbeitsplanID,String)
            End If
            If (AuftragsTypID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(AuftragsTypID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_ART_ID,Integer)
            If (Original_TS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TS")
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_TS,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(ART_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Artikelnummer As String,  _
                    ByVal EANNummer As String,  _
                    ByVal Bezeichnung As String,  _
                    ByVal Zusatz As String,  _
                    ByVal Matchcode As String,  _
                    ByVal Artikelgruppe As String,  _
                    ByVal Erfolgskontengruppe As String,  _
                    ByVal Aufwandskontengruppe As String,  _
                    ByVal Mengenstaffel As String,  _
                    ByVal SSEinkauf As String,  _
                    ByVal KontoEinkauf As String,  _
                    ByVal SSVerkauf As String,  _
                    ByVal KontoVerkauf As String,  _
                    ByVal Mengeneinheit As String,  _
                    ByVal Preisverweis As String,  _
                    ByVal Preiseinheit As Global.System.Nullable(Of Double),  _
                    ByVal Gewicht As Global.System.Nullable(Of Double),  _
                    ByVal Lagerartikel As Global.System.Nullable(Of Boolean),  _
                    ByVal Mengenformel As String,  _
                    ByVal Stueckliste As String,  _
                    ByVal SerieCharge As String,  _
                    ByVal Variantenartikel As String,  _
                    ByVal MinusWarnung As Global.System.Nullable(Of Boolean),  _
                    ByVal Provisionsfaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Rabattfaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Skontofaehig As Global.System.Nullable(Of Boolean),  _
                    ByVal Provisionsgruppe As String,  _
                    ByVal Hersteller As String,  _
                    ByVal HstArtikelnummer As String,  _
                    ByVal Lieferant As String,  _
                    ByVal Dispositionsart As String,  _
                    ByVal AutoBestellung As String,  _
                    ByVal Lagerstrategie As String,  _
                    ByVal Auslaufdatum As Global.System.Nullable(Of Date),  _
                    ByVal Inaktiv As Boolean,  _
                    ByVal AngelegtAm As Global.System.Nullable(Of Date),  _
                    ByVal AngelegtVon As String,  _
                    ByVal GeaendertAm As Global.System.Nullable(Of Date),  _
                    ByVal GeaendertVon As String,  _
                    ByVal FreierText1 As String,  _
                    ByVal FreierText2 As String,  _
                    ByVal FreieZahl1 As Global.System.Nullable(Of Short),  _
                    ByVal FreieZahl2 As Global.System.Nullable(Of Short),  _
                    ByVal FreieZahl3 As Global.System.Nullable(Of Double),  _
                    ByVal FreieZahl4 As Global.System.Nullable(Of Double),  _
                    ByVal FreiesDatum1 As Global.System.Nullable(Of Date),  _
                    ByVal FreiesDatum2 As Global.System.Nullable(Of Date),  _
                    ByVal FreiesKennzeichen1 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen2 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen3 As Global.System.Nullable(Of Boolean),  _
                    ByVal FreiesKennzeichen4 As Global.System.Nullable(Of Boolean),  _
                    ByVal SSEG As String,  _
                    ByVal SSImport As String,  _
                    ByVal SSExport As String,  _
                    ByVal ShopAktiv As Global.System.Nullable(Of Boolean),  _
                    ByVal _Region As String,  _
                    ByVal Ursprungsland As String,  _
                    ByVal Geschaeftsart As String,  _
                    ByVal Warencode As String,  _
                    ByVal StatVersand As String,  _
                    ByVal StatEingang As String,  _
                    ByVal StatWertEuro As Global.System.Nullable(Of Double),  _
                    ByVal Kostenstelle As String,  _
                    ByVal Kostentraeger As String,  _
                    ByVal DNExport As String,  _
                    ByVal Ausschussartikelnummer As String,  _
                    ByVal Produktionslager As String,  _
                    ByVal AusschussBewertung As Global.System.Nullable(Of Double),  _
                    ByVal Verfallsfrist As Global.System.Nullable(Of Integer),  _
                    ByVal _HERSTELLERNAME As String,  _
                    ByVal _LIEFERANTNAME As String,  _
                    ByVal _EV As String,  _
                    ByVal _EXBESTNR As String,  _
                    ByVal Preismengeneinheit As String,  _
                    ByVal Preismengenfaktor As Global.System.Nullable(Of Double),  _
                    ByVal LosgroesseVerkauf As Integer,  _
                    ByVal Bestandsauswahl As Boolean,  _
                    ByVal _VERFUEGBAR As String,  _
                    ByVal _ARTIKELNUMMERALT As String,  _
                    ByVal _LAGERNEU As String,  _
                    ByVal _LAGERPLATZNEU As String,  _
                    ByVal Leistungsartikel As Global.System.Nullable(Of Boolean),  _
                    ByVal Aufschlagstyp As String,  _
                    ByVal ArbeitsplanID As String,  _
                    ByVal AuftragsTypID As String,  _
                    ByVal Original_ART_ID As Integer,  _
                    ByVal Original_TS() As Byte) As Integer
            Return Me.Update(Artikelnummer, EANNummer, Bezeichnung, Zusatz, Matchcode, Artikelgruppe, Erfolgskontengruppe, Aufwandskontengruppe, Mengenstaffel, SSEinkauf, KontoEinkauf, SSVerkauf, KontoVerkauf, Mengeneinheit, Preisverweis, Preiseinheit, Gewicht, Lagerartikel, Mengenformel, Stueckliste, SerieCharge, Variantenartikel, MinusWarnung, Provisionsfaehig, Rabattfaehig, Skontofaehig, Provisionsgruppe, Hersteller, HstArtikelnummer, Lieferant, Dispositionsart, AutoBestellung, Lagerstrategie, Auslaufdatum, Inaktiv, AngelegtAm, AngelegtVon, GeaendertAm, GeaendertVon, FreierText1, FreierText2, FreieZahl1, FreieZahl2, FreieZahl3, FreieZahl4, FreiesDatum1, FreiesDatum2, FreiesKennzeichen1, FreiesKennzeichen2, FreiesKennzeichen3, FreiesKennzeichen4, SSEG, SSImport, SSExport, ShopAktiv, _Region, Ursprungsland, Geschaeftsart, Warencode, StatVersand, StatEingang, StatWertEuro, Kostenstelle, Kostentraeger, DNExport, Ausschussartikelnummer, Produktionslager, AusschussBewertung, Verfallsfrist, _HERSTELLERNAME, _LIEFERANTNAME, _EV, _EXBESTNR, Preismengeneinheit, Preismengenfaktor, LosgroesseVerkauf, Bestandsauswahl, _VERFUEGBAR, _ARTIKELNUMMERALT, _LAGERNEU, _LAGERPLATZNEU, Leistungsartikel, Aufschlagstyp, ArbeitsplanID, AuftragsTypID, Original_ART_ID, Original_TS, Original_ART_ID)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _aRTTableAdapter As ARTTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ARTTableAdapter() As ARTTableAdapter
            Get
                Return Me._aRTTableAdapter
            End Get
            Set
                Me._aRTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._aRTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aRTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aRTTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._aRTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As Artikel, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aRTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ART.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aRTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As Artikel, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aRTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ART.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aRTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As Artikel, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aRTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ART.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aRTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As Artikel) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._aRTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aRTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA"& _ 
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes"& _ 
                        "t.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst"& _ 
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt"& _ 
                        "ion nicht zu.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._aRTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aRTTableAdapter, Me._aRTTableAdapter.Connection)
                    Me._aRTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aRTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aRTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aRTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aRTTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._aRTTableAdapter) Is Nothing) Then
                    Me._aRTTableAdapter.Connection = CType(revertConnections(Me._aRTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aRTTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
